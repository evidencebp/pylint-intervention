path,msg_id,msg,alerts,chosen,In which repository the modification was done?,In which pull request the modification was done?,Do you consider the removed alert harmful?,Why do you consider it harmful (or harmless)?,"What is the code quality (1 lowest, 10 best)? Code quality refers to the code prior to the pull request.",Why do you consider the code quality as such?,"What is the expected benefit(1 – negative, 5 – neutral, 10 – great)?",Why do you consider the pull request to improve the code (or not improve it)?
src\itsdangerous\timed.py,W0718, broad-exception-caught,1,1,pallets/itsdangerous ,https://github.com/pallets/itsdangerous/pull/399,Yes,"Catching Exception might hide unexpected exceptions, like those that might be raised due to future modification. Therefore, it is recommended to narrow the exceptions.  The method unsign of class TimestampSigner catches exception in line 116.The try section just calls bytes_to_int(base64_decode(ts_bytes)) from encoding.py.base64_decode  in line 37    except (TypeError, ValueError) as e:             raise BadData(""Invalid base64-encoded data"") from e  raises BadData instead of TypeError and ValueError. Note that binascii.Error is not translated and might be raised.  https://docs.python.org/3/library/base64.html#base64.b64decode  I therefore replaced catching Exception in catching  (BadData, base64.binascii.Error)  https://stackoverflow.com/questions/43560936/python-how-to-catch-this-error-cant-source-error-name-binascii-error/43561287  bytes_to_int, also from encoding.py does not seem to raise exceptions.",6,few class in the same file,6,unlogged exception narrowed. A better solution was handling the base64 exception in the called method
src\itsdangerous\signer.py,W0718, broad-exception-caught,1,1,pallets/itsdangerous ,https://github.com/pallets/itsdangerous/pull/399,Yes," Catching Exception might hide unexpected exceptions, like those that might be raised due to future modification. Therefore, it is recommended to narrow the exceptions.  The method verify_signature of class Signer catches exception in line 233.The try section just calls base64_decode from encoding.py, which in line 37   except (TypeError, ValueError) as e:        raise BadData(""Invalid base64-encoded data"") from e  raises BadData instead of TypeError and ValueError.Note that binascii.Error is not translated and might be raised.    https://docs.python.org/3/library/base64.html#base64.b64decode I therefore replaced catching Exception in catching  (BadData, base64.binascii.Error)    ",6,few class in the same file,6,unlogged exception narrowed. A better solution was handling the base64 exception in the called method
