path,msg_id,msg,alerts,chosen,In which repository the modification was done?,In which pull request the modification was done?,Do you consider the removed alert harmful?,Why do you consider it harmful (or harmless)?,"What is the code quality (1 lowest, 10 best)? Code quality refers to the code prior to the pull request.",Why do you consider the code quality as such?,"What is the expected benefit(1 – negative, 5 – neutral, 10 – great)?",Why do you consider the pull request to improve the code (or not improve it)?
plugins\create_package.py,W0718,broad-exception-caught,1,1,SublimeText/PackageDev,https://github.com/SublimeText/PackageDev/pull/402,Yes," The function _create_package uses os.mkdir and catch exception. This is too wide since mkdir catches specific exception. That might catch and hide new exception (e.g., in case that more code will be added to the try section).  For the mkdir exceptions see: https://docs.python.org/3/library/os.html#os.mkdir",6,some function in the file with the main class,6,No exceptions hiding yet probably no new exceptions will be generated here
plugins\new_resource_file\__init__.py,C0325,superfluous-parens,1,1,SublimeText/PackageDev,https://github.com/SublimeText/PackageDev/pull/402,Yes,Removed unneeded parentheses in return statement ,7,regular,5,change to small to have impact
plugins\syntax_dev_legacy.py,R0912,too-many-branches,1,1,SublimeText/PackageDev,"legacy code, not maintained",Yes, The method on_query_completions of the class LegacySyntaxDefCompletions had 17 branches while pylint recommends to have at most 12. I extracted methods to structure more the code., , , , 
plugins\lib\fileconv\dumpers.py,W0107,unnecessary-pass,2,1,SublimeText/PackageDev,https://github.com/SublimeText/PackageDev/pull/402,Yes,The methods validate_data and write of DumperProto should be overridden by subclasses (as discussed with FichteFoll). Instead of leaving with just pass changed to raise NotImplementedError to verify that they are not mistakenly used.,5,"400+ LOC, more than one class",6,defensive programming against future accidental usage
plugins\syntax_dev\completions.py,R0911,too-many-return-statements,1,1,SublimeText/PackageDev,https://github.com/SublimeText/PackageDev/pull/402,Yes, Function match_selector had 7 return statements while pylint recommends to have at most 6. I assigned the return values into the result variable and use a single statement returning in the end of the function. ,5,"400+ LOC, many returns and distracted flow",7,Code is clearer 
main.py,W0401,wildcard-import,1,1,SublimeText/PackageDev, ,No,"use #noqa, imports in the last line of file", , , , 
plugins\lib\fileconv\loaders.py,W0107,unnecessary-pass,1,1,SublimeText/PackageDev,https://github.com/SublimeText/PackageDev/pull/402,Yes, The method parse of LoaderProto should be overridden by subclasses (as discussed with FichteFoll). Instead of leaving with just pass changed to raise NotImplementedError to verify that they are not mistakenly used. ,5,"400+ LOC, more than one class",6,defensive programming against future accidental usage
plugins\color_scheme_dev.py,W0718,broad-exception-caught,1,1,SublimeText/PackageDev, ,No,Owner considers them OK since they are logged. , , , , 
plugins\command_completions\__init__.py,C0325,superfluous-parens,1,1,SublimeText/PackageDev,https://github.com/SublimeText/PackageDev/pull/402,Yes," Removed unneeded parenthesis in python_arg_scope = (""source.python meta.function-call.arguments.python string.quoted"")  I suspected that the other might intended to create a tuple. To create a single element tuple you need a comma at the end like python_arg_scope = (""source.python meta.function-call.arguments.python string.quoted"",) So python_arg_scope was a string anyway  Also in line 262, in quite a similar code, there are no parenthesis. ",7,regular,5,change to small to have impact
plugins\lib\fileconv\plist_parser.py,W0107,unnecessary-pass,1,1,SublimeText/PackageDev,,No,In a new exception subclass,7,regular, , 
plugins\settings\known_settings.py,W0718,broad-exception-caught,1,1,SublimeText/PackageDev, ,No,Deliberate classes definition, , , , 
plugins\lib\ordereddict_yaml.py,W0107,unnecessary-pass,2,1,SublimeText/PackageDev,,No,Intended definition of two classes with members or methods, , , , 
plugins\file_conversion.py,R0911,too-many-return-statements,1,1,SublimeText/PackageDev,owner will reimplement,Yes," Method run of class had 12 return statements (it is recommended by pylint not to have more than 6).  I extracted methods that contains these statements. Since a return exit the function and a return in the new function will not exit from the caller, in some cases the result is checked in the caller, which returns if needed.",3,Long code with many many connections between its parts. The multiple returns lead to a bad structure. Plenty of alerts on the file. It would have been better to rewrite from scratch.,9,"more structure, clearer connections, more work left"
plugins\syntax_dev_legacy.py,C0325,superfluous-parens,2,0,, , , , , , , 
plugins\syntax_dev_legacy.py,R0911,too-many-return-statements,1,0,, , , , , , , 
plugins\syntax_dev_legacy.py,R0915,too-many-statements,1,0,, , , , , , , 
plugins\lib\fileconv\dumpers.py,R0912,too-many-branches,1,0,, , , , , , , 
plugins\lib\fileconv\loaders.py,W0718,broad-exception-caught,1,0,, , , , , , , 
plugins\syntax_dev\__init__.py,R0801,duplicate-code,3,0,, , , , , , , 
plugins\lib\fileconv\plist_parser.py,C0301,line-too-long,2,0,, , , , , , , 
plugins\settings\known_settings.py,R0912,too-many-branches,2,0,, , , , , , , 
plugins\file_conversion.py,R0912,too-many-branches,1,0,, , , , , , , 
plugins\file_conversion.py,R0915,too-many-statements,1,0,, , , , , , , 
