path,msg_id,msg,alerts,chosen,In which repository the modification was done?,In which pull request the modification was done?,Do you consider the removed alert harmful?,Why do you consider it harmful (or harmless)?,"What is the code quality (1 lowest, 10 best)? Code quality refers to the code prior to the pull request.",Why do you consider the code quality as such?,"What is the expected benefit(1 – negative, 5 – neutral, 10 – great)?",Why do you consider the pull request to improve the code (or not improve it)?
mpcontribs-portal\mpcontribs\users\als_beamline\scripts\__main__.py,W0401,wildcard-import,1,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1855,Yes," Wildcard imports make it harder to understand what is imported from where.
Removing it is also a defensive programming act, lowering the probability of collisions due to future new imports or objects.",7,regular script,6,import is clearer
mpcontribs-api\mpcontribs\api\projects\document.py,R1702,too-many-nested-blocks,1,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1857/,Yes," The post_save class method had 6 nesting levels while pylint recommends not to have more than 5. I extracted the small and targeted update_columns_by_flat method, with 3 nesting levels.",5,"Almost 400 LOC, many classes, long method, magic strings",7,Code improved locally yet more work needed
mpcontribs-io\mpcontribs\io\archie\mpfile.py,R0912,too-many-branches,2,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1857/,Yes," The methods get_string and from_string of the class MPFile had 14 branches each. Pylint recommends not to have more than 12 to reduce complexity, ease understanding and testing. I extracted from each method a small local method to reduce the number of branches and increase structuring.",6,Too complex method,7,"Code is a bit more structured now, the changes are small"
mpcontribs-portal\mpcontribs\portal\views.py,W0718,broad-exception-caught,1,1,materialsproject/MPContribs, ,Discuss,Line 490 in make_download catches Exception, , , , 
mpcontribs-api\mpcontribs\api\core.py,R0912,too-many-branches,2,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1857/,Yes, Function get_specs had 19 branches while pylint suggest not to have more than 12. I extracted method for populating the data structures and handling the different method names.,4,"long code, lacks structure",9,"Function is structured into small, logical, not related functions. Some functions’ signature is too big"
mpcontribs-portal\mpcontribs\users\redox_thermo_csp\pre_submission.py,R0915,too-many-statements,1,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1855,Yes," Method run had 82 statements while pylint suggest not to have more than 50. I extracted some small local methods, adding structure and making the method shorter.  Please note that the end of the method was not reachable (and still so) due to a break, which might be a bug. I added a TODO there to mark that.",4,"long method, lacks structure, plenty of commented out code, and the end is not reachable.",8,"Much more structure, more readable. Methods are too coupled due to too many variables in signature."
mpcontribs-io\mpcontribs\io\core\utils.py,C0301,line-too-long,1,1,materialsproject/MPContribs, ,No,Line describes code output so better satay as is. It is also readable. Did not change., , , , 
mpcontribs-api\mpcontribs\api\attachments\document.py,C0301,line-too-long,1,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1857/,Yes,Made a readable line shorter,7,regular,5,Made a readable line shorter
mpcontribs-api\mpcontribs\api\contributions\document.py,W0718,broad-exception-caught,1,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1857/,Yes, Catching Exception instead of specific exceptions might hide unexpected ones. Function format_cell caught Exception. isnan does not raise exceptions https://docs.python.org/3/library/math.html#math.isnan str might lead to UnicodeEncodeError https://stackoverflow.com/questions/33556465/is-there-any-object-can-make-str-function-throw-error-or-exception-in-python ,6,Low cohesion,6,"More specific exception, seems that the exception handling is not needed there in the first place"
mpcontribs-ingester\mpcontribs\ingester\webui.py,W0718,broad-exception-caught,2,1,materialsproject/MPContribs, ,Discuss, , , , , 
mpcontribs-io\mpcontribs\io\core\mpfile.py,R0912,too-many-branches,1,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1855,Yes, The method add_structure of class MPFileCore had 17 branches while pylint recommends to have no more than 12.  I extracted a small method _build_structure that builds the structure from the source while using many branches to handle the source possible types.,5,"not too structured, imports in functions",8,extracted a small method with a focused responsibility
mpcontribs-serverless\make_download\app.py,W0718,broad-exception-caught,1,1,materialsproject/MPContribs, ,Discuss, , , , , 
mpcontribs-api\gunicorn.conf.py,C0301,line-too-long,1,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1857/,Yes," Was a very long format line with 135 characters which wasn't readable. I reduced it to 107, higher than the recommended 100, while keeping the main part in the same line.",7,a small config file,6,now it is readable
mpcontribs-io\mpcontribs\io\core\components\tdata.py,W0718,broad-exception-caught,1,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1855,Yes," Method to_backgrid_dict of class table catches Exception. Catching Exception instead of specific exceptions might hide unexpected ones.  I changed to catching AttributeError, as in the StackOverflow post in the comment above.",7,regular,6,exception is more specific
mpcontribs-portal\mpcontribs\users\dilute_solute_diffusion\pre_submission.py,R0915,too-many-statements,1,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1855,Yes, Function run had 117 statements while pylint recommends not to have more than 50. The function was actually structured since it had different logics for different crystal structures. I extracted small unrelated functions for these logics.,6,Function was actually structured but written all together making it long,10,"Function is structured into small, logical, not related functions."
mpcontribs-api\mpcontribs\api\notebooks\views.py,R0915,too-many-statements,1,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1857/,Yes, The make function had 74 statement while pylint recommends to have at most 50.  I extracted small methods handling parts of the function. ,5,function is long and structuring is moderate,9,"Extracted methods are small and dedicated, most with a compact signature"
mpcontribs-portal\gunicorn.conf.py,C0301,line-too-long,1,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1855,Yes," Was a very long format line with 135 characters which wasn't readable. I reduced it to 107, higher than the recommended 100, while keeping the main part in the same line.",7,a small config file, , 
mpcontribs-client\mpcontribs\client\__init__.py,W0718,broad-exception-caught,1,1,materialsproject/MPContribs, ,Discuss, , , , , 
mpcontribs-portal\mpcontribs\users\qmcdb\main\views.py,C0301,line-too-long,1,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1855,Yes,Readable line in commented out code,7,regular,5,Readable line in commented out code
mpcontribs-api\mpcontribs\api\projects\document.py,R0912,too-many-branches,1,0, , , , , , , , 
mpcontribs-api\mpcontribs\api\projects\document.py,R0915,too-many-statements,1,0, , , , , , , , 
mpcontribs-api\mpcontribs\api\config.py,C0301,line-too-long,7,0, , , , , , , , 
mpcontribs-api\mpcontribs\api\core.py,C0301,line-too-long,3,0, , , , , , , , 
mpcontribs-api\mpcontribs\api\core.py,R0911,too-many-return-statements,1,0, , , , , , , , 
mpcontribs-api\mpcontribs\api\core.py,R0915,too-many-statements,2,0, , , , , , , , 
mpcontribs-api\mpcontribs\api\core.py,R1719,simplifiable-if-expression,1,0, , , , , , , , 
mpcontribs-ingester\mpcontribs\ingester\webui.py,W0401,wildcard-import,1,0, , , , , , , , 
mpcontribs-serverless\make_download\__init__.py,R0801,duplicate-code,11,0, , , , , , , , 
mpcontribs-portal\mpcontribs\users\dilute_solute_diffusion\pre_submission.py,R0912,too-many-branches,1,0, , , , , , , , 
mpcontribs-api\mpcontribs\api\notebooks\views.py,R0912,too-many-branches,1,0, , , , , , , , 
mpcontribs-api\mpcontribs\api\notebooks\views.py,W0718,broad-exception-caught,3,0, , , , , , , , 
mpcontribs-client\mpcontribs\client\__init__.py,C0302,too-many-lines,1,0, , , , , , , , 
mpcontribs-client\mpcontribs\client\__init__.py,R0912,too-many-branches,7,0, , , , , , , , 
mpcontribs-client\mpcontribs\client\__init__.py,R0915,too-many-statements,3,0, , , , , , , , 
mpcontribs-client\mpcontribs\client\__init__.py,R1702,too-many-nested-blocks,7,0, , , , , , , , 
