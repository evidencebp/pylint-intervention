path,msg_id,msg,alerts,chosen,In which repository the modification was done?,In which pull request the modification was done?,Do you consider the removed alert harmful?,Why do you consider it harmful (or harmless)?,"What is the code quality (1 lowest, 10 best)? Code quality refers to the code prior to the pull request.",Why do you consider the code quality as such?,"What is the expected benefit(1 – negative, 5 – neutral, 10 – great)?",Why do you consider the pull request to improve the code (or not improve it)?,LOC_before,LLOC_before,SLOC_before,N1_before,N2_before,McCabe_max_before,McCabe_sum_before,LOC_after,LLOC_after,SLOC_after,N1_after,N2_after,McCabe_max_after,McCabe_sum_after,SLOC_diff,N1_diff,LOC_diff,N2_diff,LLOC_diff,McCabe_sum_diff,McCabe_max_diff,file,repo_name,modified_McCabe_max_diff
src\python_rucaptcha\re_captcha.py,C0301,line-too-long,1,1,AndreiDrang/python-rucaptcha,https://github.com/AndreiDrang/python-rucaptcha/pull/307,No,Made a readable too long line shorter,8,"short and focused, documented, used type hints",5,Made a readable too long line shorter,172,17,23,1,2,2.0,6.0,173,17,24,1,2,2.0,6.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,AndreiDrang_python-rucaptcha_interventions_October_05_2024.csv,AndreiDrang/python-rucaptcha,
src\python_rucaptcha\rotate_captcha.py,C0301,line-too-long,1,1,AndreiDrang/python-rucaptcha,https://github.com/AndreiDrang/python-rucaptcha/pull/307,No,Made a readable too long line shorter,8,"short and focused, documented, used type hints and enum",5,Made a readable too long line shorter,196,30,60,4,6,3.0,11.0,197,30,60,4,6,3.0,11.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,AndreiDrang_python-rucaptcha_interventions_October_05_2024.csv,AndreiDrang/python-rucaptcha,
src\python_rucaptcha\key_captcha.py,C0301,line-too-long,1,1,AndreiDrang/python-rucaptcha,https://github.com/AndreiDrang/python-rucaptcha/pull/307,No,Made a readable too long line shorter,8,"short and focused, documented, used type hints and enum",5,Made a readable too long line shorter,111,17,31,1,2,2.0,6.0,112,17,32,1,2,2.0,6.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,AndreiDrang_python-rucaptcha_interventions_October_05_2024.csv,AndreiDrang/python-rucaptcha,
src\python_rucaptcha\amazon_waf.py,C0301,line-too-long,1,1,AndreiDrang/python-rucaptcha,https://github.com/AndreiDrang/python-rucaptcha/pull/307,No,Made a readable too long line shorter,8,"short and focused, documented, used type hints and enum",5,Made a readable too long line shorter,114,17,29,1,2,2.0,6.0,115,17,30,1,2,2.0,6.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,AndreiDrang_python-rucaptcha_interventions_October_05_2024.csv,AndreiDrang/python-rucaptcha,
src\python_rucaptcha\turnstile.py,C0301,line-too-long,1,1,AndreiDrang/python-rucaptcha,https://github.com/AndreiDrang/python-rucaptcha/pull/307,No,Made a readable too long line shorter,8,"short and focused, documented, used type hints and enum",5,Made a readable too long line shorter,111,17,23,1,2,2.0,6.0,112,17,24,1,2,2.0,6.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,AndreiDrang_python-rucaptcha_interventions_October_05_2024.csv,AndreiDrang/python-rucaptcha,
docs\conf.py,C0301,line-too-long,1,1,AndreiDrang/python-rucaptcha,https://github.com/AndreiDrang/python-rucaptcha/pull/307,No,Made a readable too long line shorter,8,"short and focused, documented, used type hints and enum",6,Structure is slightly more readable now,108,47,90,0,0,,,110,47,92,2,4,,,2.0,2.0,2.0,4.0,0.0,,,AndreiDrang_python-rucaptcha_interventions_October_05_2024.csv,AndreiDrang/python-rucaptcha,
docs\conf.py,C0301,line-too-long,1,1,AndreiDrang/python-rucaptcha,https://github.com/AndreiDrang/python-rucaptcha/pull/307,No,Made a readable too long line shorter,8,"short and focused, documented, used type hints and enum",6,Structure is slightly more readable now,108,47,90,0,0,,,110,47,92,2,4,,,2.0,2.0,2.0,4.0,0.0,,,AndreiDrang_python-rucaptcha_interventions_October_05_2024.csv,AndreiDrang/python-rucaptcha,
filter.py,R1703,simplifiable-if-statement,1,1,Hipo/university-domains-list,https://github.com/Hipo/university-domains-list/pull/667,Yes,"Instead of just returning a Boolean expression, it was wrapped by an if, returning True if True and False if False  ",5,"Not clean, bad variables names",6,"Lower complexity, easier to understand that the if is not indeed needed",80,46,43,13,24,7.0,13.0,76,43,40,13,24,7.0,13.0,-3.0,0.0,-4.0,0.0,-3.0,0.0,0.0,Hipo_university-domains-list_interventions_September_29_2024.csv,Hipo/university-domains-list,
bin\litscan-retracted-articles.py,W0718,broad-exception-caught,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,"As discussed, narrowed Exception to ValueError",7,regular,6,narrowed exception,88,51,45,10,20,13.0,13.0,88,51,45,10,20,13.0,13.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\databases\hgnc\helpers.py,W0718,broad-exception-caught,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes," Catching Exception might hide unexpected exceptions (e.g., due to new code that will be added).More than that, the exception handling does not log it but returns None, making it harder to detect.I changed it to catching  requests.exceptions.HTTPErrorSeehttps://stackoverflow.com/questions/24518944/try-except-when-using-python-requests-module",5,"multiple returns, magic strings",6,narrowed un-logged exception,180,94,135,38,76,13.0,30.0,180,94,135,38,76,13.0,30.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\rnacentral\r2dt\parser.py,W0718,broad-exception-caught,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes," Catching Exception might hide unexpected exceptions (e.g., due to new code that will be added).  The method parse calls R2DTResultInfo.validate (in line 96).Validate is a sequence of assertions, hence the specific AssertionError can be used instead.  See https://stackoverflow.com/questions/1569049/making-pythons-assert-throw-an-exception-that-i-choose",6,magic strings,6,narrowed logged exception,108,70,79,21,40,9.0,19.0,108,70,79,21,40,9.0,19.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\rnacentral\genome_mapping\igv.py,W0718,broad-exception-caught,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes," Catching Exception might hide unexpected exceptions (e.g., due to new code that will be added).   The function ftp calls ftplib.FTP's quit (in line 40).The specific ftplib.all_errors   can be used instead.   See https://docs.python.org/3/library/ftplib.html",6,string construction with +,6,narrowed logged exception,84,50,50,52,105,23.0,28.0,84,50,50,52,105,23.0,28.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\databases\europepmc\stream.py,W0718,broad-exception-caught,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,"The function fallback calls fetch.lookup (in line 41). I changed to (fetch.UnknownReference, fetch.TooManyPublications) as discussed. Please note that I could not find where TooManyPublications is defined",7,regular,6,narrowed un-logged exception,81,46,53,5,8,9.0,19.0,81,46,53,5,8,9.0,19.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
bin\litscan-create-xml-metadata.py,C0301,line-too-long,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,Made a readable line shorter.,7,regular,5,Made a readable line shorter.,110,59,64,8,16,5.0,7.0,111,59,65,8,16,5.0,7.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\utils.py,C0301,line-too-long,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,Made a readable line shorter,7,regular,5,Made a readable line shorter,55,30,29,0,0,3.0,12.0,56,30,29,0,0,3.0,12.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\databases\evlncrnas\lookup.py,C0301,line-too-long,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,Made unreadable commented out line shorter.,6,bad variable names,6,Made an unreadable line readable,152,37,92,1,2,2.0,4.0,153,37,92,1,2,2.0,4.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\databases\evlncrnas\parser.py,C0301,line-too-long,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,Made a readable line shorter,6,many magic strings,5,Made a readable line shorter,348,160,247,10,19,5.0,14.0,349,160,247,10,19,5.0,14.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\databases\mgnify\prepare.py,C0301,line-too-long,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,Made a readable line shorter,7,regular,5,Made a readable line shorter,80,37,47,4,8,6.0,8.0,81,37,48,4,8,6.0,8.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\databases\plncdb\parser.py,C0301,line-too-long,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,Made a readable line shorter,6,some dead code (parameters in a call),5,Made a readable line shorter,162,64,94,12,24,6.0,19.0,163,64,95,12,24,6.0,19.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
bin\litscan-get-statistics.py,C0301,line-too-long,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,Made a readable line shorter,5,"Instead of using few columns in a single query, uses different queries",5,Made a readable line shorter,64,30,28,2,4,1.0,1.0,65,30,29,2,4,1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\cli\ensembl.py,C0301,line-too-long,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,Made a readable line shorter,7,regular,5,Made a readable line shorter,181,99,112,6,11,3.0,14.0,183,99,114,8,15,3.0,14.0,2.0,2.0,2.0,4.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\databases\tmrna\helpers.py,C0301,line-too-long,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,Made a readable line shorter,7,regular,5,Made a readable line shorter,64,50,53,5,10,6.0,18.0,65,50,54,6,12,6.0,18.0,1.0,1.0,1.0,2.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\rnacentral\precompute\utils.py,C0301,line-too-long,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,Made a readable line shorter,7,regular,5,Made a readable line shorter,177,72,67,22,41,7.0,28.0,178,72,67,22,41,7.0,28.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\rnacentral\search_export\compare.py,C0301,line-too-long,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,Made a readable line shorter,5,"variables data1 ad data2, magic numbers",5,Made a readable line shorter,88,48,56,9,18,7.0,12.0,89,48,57,10,20,7.0,12.0,1.0,1.0,1.0,2.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\databases\psi_mi\tab.py,W0107,unnecessary-pass,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,unneeded pass in the end of exception handling,6,"too many returns hurts structure, though in short functions",6,Cleaned a left over,202,103,143,24,44,5.0,40.0,201,102,142,24,44,5.0,40.0,-1.0,0.0,-1.0,0.0,-1.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
plugins\create_package.py,W0718,broad-exception-caught,1,1,SublimeText/PackageDev,https://github.com/SublimeText/PackageDev/pull/402,Yes," The function _create_package uses os.mkdir and catch exception. This is too wide since mkdir catches specific exception. That might catch and hide new exception (e.g., in case that more code will be added to the try section).  For the mkdir exceptions see: https://docs.python.org/3/library/os.html#os.mkdir",6,some function in the file with the main class,6,No exceptions hiding yet probably no new exceptions will be generated here,81,52,60,5,7,6.0,21.0,83,54,62,5,7,6.0,22.0,2.0,0.0,2.0,0.0,2.0,1.0,0.0,SublimeText_PackageDev_interventions_October_05_2024.csv,SublimeText/PackageDev,1
plugins\new_resource_file\__init__.py,C0325,superfluous-parens,1,1,SublimeText/PackageDev,https://github.com/SublimeText/PackageDev/pull/402,Yes,Removed unneeded parentheses in return statement ,7,regular,5,change to small to have impact,119,81,75,11,21,5.0,31.0,119,81,75,11,21,5.0,31.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,SublimeText_PackageDev_interventions_October_05_2024.csv,SublimeText/PackageDev,
plugins\command_completions\__init__.py,C0325,superfluous-parens,1,1,SublimeText/PackageDev,https://github.com/SublimeText/PackageDev/pull/402,Yes," Removed unneeded parenthesis in python_arg_scope = (""source.python meta.function-call.arguments.python string.quoted"")  I suspected that the other might intended to create a tuple. To create a single element tuple you need a comma at the end like python_arg_scope = (""source.python meta.function-call.arguments.python string.quoted"",) So python_arg_scope was a string anyway  Also in line 262, in quite a similar code, there are no parenthesis. ",7,regular,5,change to small to have impact,286,146,221,30,49,8.0,61.0,286,146,221,30,49,8.0,61.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,SublimeText_PackageDev_interventions_October_05_2024.csv,SublimeText/PackageDev,
plugins\syntax_dev\completions.py,R0911,too-many-return-statements,1,1,SublimeText/PackageDev,https://github.com/SublimeText/PackageDev/pull/402,Yes, Function match_selector had 7 return statements while pylint recommends to have at most 6. I assigned the return values into the result variable and use a single statement returning in the end of the function. ,5,"400+ LOC, many returns and distracted flow",7,Code is clearer ,439,174,352,42,71,9.0,64.0,444,177,355,42,71,9.0,64.0,3.0,0.0,5.0,0.0,3.0,0.0,0.0,SublimeText_PackageDev_interventions_October_05_2024.csv,SublimeText/PackageDev,
plugins\lib\fileconv\loaders.py,W0107,unnecessary-pass,1,1,SublimeText/PackageDev,https://github.com/SublimeText/PackageDev/pull/402,Yes, The method parse of LoaderProto should be overridden by subclasses (as discussed with FichteFoll). Instead of leaving with just pass changed to raise NotImplementedError to verify that they are not mistakenly used. ,5,"400+ LOC, more than one class",6,defensive programming against future accidental usage,428,197,208,55,104,10.0,88.0,429,197,208,55,104,10.0,88.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,SublimeText_PackageDev_interventions_October_05_2024.csv,SublimeText/PackageDev,
cappuccino\lastfm.py,R0911,too-many-return-statements,1,1,TheReverend403/cappuccino,https://github.com/TheReverend403/cappuccino/pull/23,Yes, Method now_playing of class LastFM had 8 returns while Pylint recommends having at most 6. The return value is assigned into the variable response that is returned at the end.,6,a bit complex,7,response variable instead of return,129,67,86,8,13,11.0,24.0,132,74,93,8,13,12.0,26.0,7.0,0.0,3.0,0.0,7.0,2.0,1.0,TheReverend403_ricedb_interventions_October_04_2024.csv,TheReverend403/cappuccino,1
cappuccino\triggers.py,R0911,too-many-return-statements,1,1,TheReverend403/cappuccino,https://github.com/TheReverend403/cappuccino/pull/23,Yes,"  Method trigger of class Triggers had 7 returns while Pylint recommends having at most 6.  Now, in the last returns, the return value is assigned into the variable response that is returned at the end. ",7,regular,7,response variable instead of return,133,63,93,17,31,10.0,28.0,134,65,95,17,31,10.0,28.0,2.0,0.0,1.0,0.0,2.0,0.0,0.0,TheReverend403_ricedb_interventions_October_04_2024.csv,TheReverend403/cappuccino,
cappuccino\rice.py,R0911,too-many-return-statements,1,1,TheReverend403/cappuccino,https://github.com/TheReverend403/cappuccino/pull/23,Yes," Method _generic_db of class Rice had 19 returns while Pylint recommends having at most 6.  Now, in the last returns, the return value is assigned into the variable response that is returned at the end. ",5,"too complex (e.g., branches too)",7,response variable instead of return,246,150,152,26,50,39.0,57.0,241,162,164,27,51,42.0,60.0,12.0,1.0,-5.0,1.0,12.0,3.0,3.0,TheReverend403_ricedb_interventions_October_04_2024.csv,TheReverend403/cappuccino,3
cappuccino\urlinfo.py,R0915,too-many-statements,1,1,TheReverend403/cappuccino,https://github.com/TheReverend403/cappuccino/pull/23,Yes," Method _process_url of class UrlInfo had 58 statements while Pylint recommends having at most 50. Now there are dedicated methods _validate_ip_address, _validate_content_type, _extract_title_and_size, _extract_title_from_soup, and _extract_site_name_from_soup ",7,regular,10,"clean methods covering logic, some might be reusable",269,183,204,43,82,29.0,82.0,267,186,203,38,72,23.0,74.0,-1.0,-5.0,-2.0,-10.0,3.0,-8.0,-6.0,TheReverend403_ricedb_interventions_October_04_2024.csv,TheReverend403/cappuccino,-22
src\iembot\util.py,W0104,pointless-statement,1,1,akrherz/iembot,https://github.com/akrherz/iembot/pull/99,Yes,"In the function toot_cb, line 506 there is the seems to be pointless statement mduser[""screen_name""]. Accessing a key might be a way to cause an expectation if the key does not exist but there is no exception handling here. mduser is created a few lines above and is not used later or returned.",4,"800+ LOC, low cohesion of utils, tendency to returns",6,pointless statement is removed. Could lead to confusion.,875,511,641,82,155,13.0,116.0,874,510,640,82,155,13.0,116.0,-1.0,0.0,-1.0,0.0,-1.0,0.0,0.0,akrherz_iembot_interventions_October_04_2024.csv,akrherz/iembot,
src\iembot\iemchatbot.py,R0912,too-many-branches,1,1,akrherz/iembot,https://github.com/akrherz/iembot/pull/99,Yes,"Method processMessagePC of class JabberClient had 19 branches while Pylint recommends having no more than 12.I extracted some methods, fixing also too-many-statements, and making the code more structured and readable. ",7,regular,9,extracted unrelated methods,236,136,169,36,71,24.0,60.0,259,147,180,38,74,15.0,53.0,11.0,2.0,23.0,3.0,11.0,-7.0,-9.0,akrherz_iembot_interventions_October_04_2024.csv,akrherz/iembot,-16
src\iembot\basicbot.py,R0912,too-many-branches,1,1,akrherz/iembot,https://github.com/akrherz/iembot/pull/99,Yes,"Method process_groupchat_cmd of class basicbot had 17 branches while Pyline recommends having at most 12.The method handles different commands.I extracted three methods handling specific commands, fixing the alert.This change also reduces the method length and makes it more structured and readable. ",5,"700+ LOC, low cohesion of utils, tendency to returns",8,extracted unrelated methods but with too many parameters,756,426,534,53,100,13.0,92.0,765,432,540,53,100,8.0,95.0,6.0,0.0,9.0,0.0,6.0,3.0,-5.0,akrherz_iembot_interventions_October_04_2024.csv,akrherz/iembot,-6
docs\conf.py,C0301,line-too-long,1,1,alchemistry/alchemlyb,https://github.com/alchemistry/alchemlyb/pull/424,Yes," Made line shorter, its end wasn't readable ",6,imports spread in file instead of the beginning,6,end of line wasn’t readable,189,29,66,1,2,,,190,29,67,2,4,,,1.0,1.0,1.0,2.0,0.0,,,alchemistry_alchemlyb_interventions_October_05_2024.csv,alchemistry/alchemlyb,
docs\conf.py,C0301,line-too-long,1,1,alchemistry/alchemlyb,https://github.com/alchemistry/alchemlyb/pull/424,Yes," Made line shorter, its end wasn't readable ",6,imports spread in file instead of the beginning,6,end of line wasn’t readable,189,29,66,1,2,,,190,29,67,2,4,,,1.0,1.0,1.0,2.0,0.0,,,alchemistry_alchemlyb_interventions_October_05_2024.csv,alchemistry/alchemlyb,
src\alchemlyb\parsing\util.py,C0301,line-too-long,1,1,alchemistry/alchemlyb,https://github.com/alchemistry/alchemlyb/pull/424,No,Made a readable line shorter,7,ok,5,shorter readable line,97,35,35,14,28,12.0,16.0,98,35,36,15,30,12.0,16.0,1.0,1.0,1.0,2.0,0.0,0.0,0.0,alchemistry_alchemlyb_interventions_October_05_2024.csv,alchemistry/alchemlyb,
src\pygubu\plugins\ttkwidgets\utils.py,W0718,broad-exception-caught,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," Catching Exception might hide unexpected exceptions (e.g., due to new code that will be added).   The method _code_process_property_value of the class  AutocompleteBaseBO calls cvalues = f""{value.split()}"" (in line 29).Split does not raise exceptions.https://docs.python.org/3.3/library/stdtypes.htmlThe handling is just pass, which increase the risk of missing unexpected exceptions, If value is None then AttributeError will be raised.",7,regular,6,Alert on using pass by mistake.,85,56,65,7,14,4.0,22.0,85,56,65,7,14,4.0,22.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,
src\pygubu\plugins\tkcalendar\basecalendar.py,C0301,line-too-long,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes,Made a readable line shorter,7,mainly configuration,5,Made a readable line shorter,183,26,177,6,12,5.0,13.0,184,26,178,7,14,5.0,13.0,1.0,1.0,1.0,2.0,0.0,0.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,
src\pygubu\plugins\tkmt\designer\properties.py,C0301,line-too-long,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes,Made a readable line shorter,7,mainly configuration,5,Made a readable line shorter,175,13,172,0,0,,,176,13,173,1,2,,,1.0,1.0,1.0,2.0,0.0,,,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,
src\pygubu\plugins\ttk\ttkstdwidgets.py,C0301,line-too-long,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes,Made a readable line shorter,4,700+ LOC,5,Made a readable line shorter,775,360,624,56,111,9.0,91.0,776,360,625,57,113,9.0,91.0,1.0,1.0,1.0,2.0,0.0,0.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,
src\pygubu\plugins\ttkwidgets\itemscanvas.py,C0301,line-too-long,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes,Made a readable line shorter,7,mainly configuration,5,Made a readable line shorter,102,34,94,6,12,4.0,10.0,103,34,95,7,14,4.0,10.0,1.0,1.0,1.0,2.0,0.0,0.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,
src\pygubu\plugins\ttkwidgets\table.py,C0301,line-too-long,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes,Made an unreadable line shorter,7,regular,6,Made an unreadable line shorter,106,44,89,8,16,5.0,14.0,107,44,90,9,18,5.0,14.0,1.0,1.0,1.0,2.0,0.0,0.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,
src\pygubu\plugins\pygubu\designer\properties.py,C0301,line-too-long,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes,Made a readable line shorter,7,mainly configuration,5,Made a readable line shorter,287,50,282,0,0,,,288,50,283,1,2,,,1.0,1.0,1.0,2.0,0.0,,,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,
src\pygubu\plugins\tkintertable\__init__.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," ""spec is not None"" is already Boolean. Removing the surrounding if statement simplifies the statement.",6,magic strings,6,statement is a bit simpler,58,27,36,1,2,3.0,11.0,58,27,36,1,2,3.0,10.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\plugins\tksheet\__init__.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," ""spec is not None"" is already Boolean. Removing the surrounding if statement simplifies the statement.",7,"small class, magic string",6,statement is a bit simpler,24,16,16,1,2,2.0,7.0,24,16,16,1,2,2.0,6.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\plugins\awesometkinter\__init__.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," ""spec is not None"" is already Boolean. Removing the surrounding if statement simplifies the statement.",6,"multiple returns, import in function",6,statement is a bit simpler,58,25,46,2,4,3.0,12.0,58,25,46,2,4,3.0,10.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\widgets\dockfw\dockframe.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," ""tpane == self._main_pane"" is already Boolean. Removing the surrounding if statement simplifies the statement.",5,"400+ LOC, high nesting",6,statement is a bit simpler,405,294,325,40,76,9.0,95.0,405,294,325,40,76,9.0,94.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\plugins\tkmt\__init__.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," ""spec is not None"" is already Boolean. Removing the surrounding if statement simplifies the statement.",6,"multiple returns, import in function",6,statement is a bit simpler,38,27,27,3,6,3.0,14.0,38,27,27,3,6,3.0,13.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\plugins\tkcalendar\__init__.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," ""spec is not None"" is already Boolean. Removing the surrounding if statement simplifies the statement.",7,multiple returns,6,statement is a bit simpler,30,20,22,2,4,3.0,11.0,30,20,22,2,4,3.0,10.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\plugins\tkintermapview\__init__.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," ""spec is not None"" is already Boolean. Removing the surrounding if statement simplifies the statement.",7,"small class, magic string",6,statement is a bit simpler,59,29,37,1,2,3.0,11.0,59,29,37,1,2,3.0,10.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\plugins\customtkinter\__init__.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," ""spec is not None"" is already Boolean. Removing the surrounding if statement simplifies the statement.",6,"multiple returns, import in function",6,statement is a bit simpler,56,24,45,2,4,3.0,12.0,56,24,45,2,4,3.0,10.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\plugins\tkinterweb\__init__.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," ""spec is not None"" is already Boolean. Removing the surrounding if statement simplifies the statement.",6,"multiple returns, import in function",6,statement is a bit simpler,44,24,31,2,4,3.0,12.0,44,24,31,2,4,3.0,10.0,0.0,0.0,0.0,0.0,0.0,-2.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\theming\bootstrap\builder.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes,"Using bool, the dedicated function to convert None to False, others into Boolean in the regular mapping",3,2700+ LOC,6,statement is a bit simpler,2783,984,2402,112,186,7.0,182.0,2783,984,2402,112,186,7.0,182.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,
src\pygubu\component\builderobject.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes,"Using bool, the dedicated function to convert None to False, others into Boolean in the regular mapping",4,"1,000+ LOC",6,statement is a bit simpler,1056,745,847,128,255,17.0,273.0,1056,745,847,128,255,17.0,272.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\plugins\ttkwidgets\__init__.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," ""spec is not None"" is already Boolean. Removing the surrounding if statement simplifies the statement.",7,multiple returns,6,statement is a bit simpler,62,20,55,2,4,3.0,11.0,62,20,55,2,4,3.0,10.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\plugins\tk\tkstdwidgets.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes,"""master.type(0) == ""tearoff"""" is already Boolean. Removing the surrounding if statement simplifies the statement. ",4,"1,000+ LOC",6,statement is a bit simpler,1523,518,1300,76,152,12.0,142.0,1523,518,1300,76,152,12.0,141.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\widgets\dockfw\framework.py,R0912,too-many-branches,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," The class method drag_motion of class DockingFramework had 17 branches, while Pylint recommends not to have more than 12.  The method was structured so I extracted two methods for handling indicator and cursor moving.",7,regular,7,some code is encapsulated,251,174,213,47,94,26.0,80.0,260,181,220,47,94,19.0,80.0,7.0,0.0,9.0,0.0,7.0,0.0,-7.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-7
src\pygubu\builder.py,R0912,too-many-branches,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," The class method _import_class of class Builder had 13 branches, while Pylint recommends not to have more than 12. The method was structured so I extracted a method for handling load problems.",4,"~400 LOC, unstructured code",7,some code is encapsulated,393,274,280,39,66,15.0,90.0,396,276,282,39,66,13.0,91.0,2.0,0.0,3.0,0.0,2.0,1.0,-2.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-2
src\pygubu\widgets\calendarframe.py,R0912,too-many-branches,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," The method configure of class CalanderFrame had 14 branches while Pylint recommends not to have more than 12.  The methods were structured so I extracted methods for handling state, locale, and firstweekday..",4,"500+ LOC, magic numbers",9,"small unrelated methods, few parameters",564,349,454,79,154,17.0,86.0,577,358,463,79,154,11.0,89.0,9.0,0.0,13.0,0.0,9.0,3.0,-6.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-6
src\pygubu\component\uidefinition.py,R1702,too-many-nested-blocks,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes, Method __load_layout_v1_0 of class UIDefinition had 7 nested blocks while Pylint recommends not to have more than 5.I extracted the method _handle_child_layouts fixing this alert and too-many-branches too.,4,500+ LOC,8,"small unrelated method, few parameters, some are modified",582,437,461,71,133,13.0,135.0,586,440,464,71,133,13.0,136.0,3.0,0.0,4.0,0.0,3.0,1.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-6
bioconda_utils\cli.py,R1703,simplifiable-if-statement,1,1,bioconda/bioconda-utils,https://github.com/bioconda/bioconda-utils/pull/1022,Yes," The function build checks the value of ""pkg_dir is None"" in a if statement and assigns it to the variable use_host_conda_bld (line 469).I assigned the expression directly to the variable, removing the unneeded if and simplifying the code.",3,"1,100 LOC",7,"Simpler code, avoids confusion or amusement ",1129,596,897,114,199,35.0,156.0,1126,593,894,114,199,35.0,155.0,-3.0,0.0,-3.0,0.0,-3.0,-1.0,0.0,bioconda_bioconda-utils_interventions_September_27_2024.csv,bioconda/bioconda-utils,-1
bioconda_utils\artifacts.py,C0325,superfluous-parens,1,1,bioconda/bioconda-utils,https://github.com/bioconda/bioconda-utils/pull/1022,Yes,Removed unnecessary parenthesis,7,regular,5,Removed unnecessary parenthesis,244,175,184,25,45,19.0,50.0,244,175,184,25,45,19.0,50.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,bioconda_bioconda-utils_interventions_September_27_2024.csv,bioconda/bioconda-utils,
bioconda_utils\bioconductor_skeleton.py,C0325,superfluous-parens,1,1,bioconda/bioconda-utils,https://github.com/bioconda/bioconda-utils/pull/1022,Yes,Removed unnecessary parenthesis,3,"1,300 LOC",5,Removed unnecessary parenthesis,1317,559,776,106,195,32.0,185.0,1317,559,776,106,195,32.0,185.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,bioconda_bioconda-utils_interventions_September_27_2024.csv,bioconda/bioconda-utils,
bioconda_utils\update_pinnings.py,R0912,too-many-branches,1,1,bioconda/bioconda-utils,https://github.com/bioconda/bioconda-utils/pull/1022,Yes," The function ""check"" had 14 branches , while Pylint recommends having no more than 12. I extracted a method to handle the metas.",7,regular,7,code is somewhat more structured,363,145,195,25,46,16.0,40.0,367,148,198,25,46,10.0,41.0,3.0,0.0,4.0,0.0,3.0,1.0,-6.0,bioconda_bioconda-utils_interventions_September_27_2024.csv,bioconda/bioconda-utils,-6
bioconda_utils\utils.py,R0912,too-many-branches,1,1,bioconda/bioconda-utils,https://github.com/bioconda/bioconda-utils/pull/1022,Yes," The function  run had 13 branches and, while Pylint recommends having no more than 12.  I extracted _handle_process to reduce the complexity. ",3,1600 LOC,7,code is somewhat more structured,1656,841,950,138,256,17.0,299.0,1660,844,953,138,256,13.0,300.0,3.0,0.0,4.0,0.0,3.0,1.0,-4.0,bioconda_bioconda-utils_interventions_September_27_2024.csv,bioconda/bioconda-utils,-4
bioconda_utils\autobump.py,R0912,too-many-branches,1,1,bioconda/bioconda-utils,https://github.com/bioconda/bioconda-utils/pull/1022,Yes," The method apply of the class CreatePullRequest  had 14 branches and, while Pylint recommends having no more than 12.  I extracted _handle_open_PRs to reduce the complexity.",3,"1,200 LOC",8,extracted a significant logic. Extraction hints of assignment to unused variables.,1227,745,743,105,179,22.0,318.0,1231,748,746,105,179,22.0,318.0,3.0,0.0,4.0,0.0,3.0,0.0,0.0,bioconda_bioconda-utils_interventions_September_27_2024.csv,bioconda/bioconda-utils,-8
bioconda_utils\githandler.py,W0107,unnecessary-pass,1,1,bioconda/bioconda-utils,https://github.com/bioconda/bioconda-utils/pull/1022,Yes,Removed unnecessary pass,4,600 LOC,6,Removed unnecessary pass,667,407,402,60,103,13.0,138.0,666,406,401,60,103,13.0,138.0,-1.0,0.0,-1.0,0.0,-1.0,0.0,0.0,bioconda_bioconda-utils_interventions_September_27_2024.csv,bioconda/bioconda-utils,
redir_gen\redirgen.py,C0301,line-too-long,1,1,bl4de/security-tools,https://github.com/bl4de/security-tools/pull/34,Yes,Made a readable line shorter,7,regular script,5,Made a readable line shorter,54,32,34,0,0,2.0,4.0,56,32,36,0,0,2.0,4.0,2.0,0.0,2.0,0.0,0.0,0.0,0.0,bl4de_security-tools_interventions_October_04_2024.csv,bl4de/security-tools,
ip_generator.py,C0301,line-too-long,1,1,bl4de/security-tools,https://github.com/bl4de/security-tools/pull/34,Yes,Made a readable line shorter,6,magic numbers,5,Made a readable line shorter,47,23,30,6,12,6.0,7.0,48,23,31,6,12,6.0,7.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,bl4de_security-tools_interventions_October_04_2024.csv,bl4de/security-tools,
hasher.py,C0325,superfluous-parens,1,1,bl4de/security-tools,https://github.com/bl4de/security-tools/pull/34,Yes,Removed unneeded parenthesis in if,7,regular script,6,a bit less complex,68,37,46,3,6,4.0,7.0,68,37,46,3,6,4.0,7.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,bl4de_security-tools_interventions_October_04_2024.csv,bl4de/security-tools,
virustotal.py,C0325,superfluous-parens,1,1,bl4de/security-tools,https://github.com/bl4de/security-tools/pull/34,Yes,Removed unneeded parenthesis in if,6,"hard coded urls, magic numbers",6,a bit less complex,71,46,49,5,10,5.0,8.0,71,46,49,5,10,5.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,bl4de_security-tools_interventions_October_04_2024.csv,bl4de/security-tools,
hexview\hexview.py,R0916,too-many-boolean-expressions,1,1,bl4de/security-tools,https://github.com/bl4de/security-tools/pull/34,Yes," If had 6 terms, it is recommended not to have more than 5. I extracted the logic of checking two variable, making the logic more structured.",5,"400+ LOC, magic numbers, unclear variables names",6,logic is a bit more structured,442,160,367,82,164,9.0,30.0,444,162,369,84,166,9.0,30.0,2.0,2.0,2.0,2.0,2.0,0.0,0.0,bl4de_security-tools_interventions_October_04_2024.csv,bl4de/security-tools,
diggit\diggit.py,W0107,unnecessary-pass,1,1,bl4de/security-tools,https://github.com/bl4de/security-tools/pull/34,Yes," print_banner comment says that it should print the credits but it implementation is just pass. I removed the function and the single call to it, giving the same credit in less code.",7,regular script,6,removed a function implemented as pass,137,74,94,49,98,9.0,16.0,130,70,91,49,98,9.0,15.0,-3.0,0.0,-7.0,0.0,-4.0,-1.0,0.0,bl4de_security-tools_interventions_October_04_2024.csv,bl4de/security-tools,
src\rinoh\table.py,C0325,superfluous-parens,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes,remove unneeded parenthesis ,6,"long file, many classes",6,removed unneeded parenthesis,656,455,492,121,240,36.0,265.0,656,455,492,121,240,36.0,265.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,
src\rinoh\font\type1.py,R0912,too-many-branches,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes, The constructor of AdobeFontMetricsParser had 14 branches. I extracted _process_line with the content of the loop going over lines.,7,rather regular,6,extracted method coupled with its caller,347,257,290,47,83,17.0,119.0,350,259,292,47,83,13.0,115.0,2.0,0.0,3.0,0.0,2.0,-4.0,-4.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,-6
src\rinoh\font\opentype\required.py,R0912,too-many-branches,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes," The constructors, that handles many format values, had too many branches. I extracting handling format 4 into a dedicated method.",6,magic numbers,8,"clearer code, yet related to original method",443,203,368,43,86,20.0,95.0,447,206,371,43,86,13.0,87.0,3.0,0.0,4.0,0.0,3.0,-8.0,-7.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,-7
src\rinoh\reference.py,R0912,too-many-branches,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes," Method children had many branches computing the text variable. I extracted those base on the type value into _handle_type and replaces these branches with a single one, checking if the type is relevant.",6,unclear type magic numbers,6,there is still coupling due to dependency in type values,469,316,343,38,75,12.0,146.0,476,320,348,39,77,11.0,147.0,5.0,1.0,7.0,2.0,4.0,1.0,-1.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,-4
src\rinoh\attribute.py,R0912,too-many-branches,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes, Method __new__ of the class WithAttributes had too many branches. I extracted a static method _handle_bases handing base classes logic.,6,"rather long file, with a few classes",7,"clearer code, too many parameter in extracted method, some are modified",614,457,471,60,112,16.0,223.0,618,460,474,60,112,11.0,223.0,3.0,0.0,4.0,0.0,3.0,0.0,-5.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,-5
src\rinoh\backend\pdf\filter.py,R0912,too-many-branches,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes, Function run_length_encoder had 14 branches (limit is 12). Extracted the _handle_byte function,6,"long file, magic numbers, unrelated code",6,extracted method coupled with its caller,473,353,353,80,151,14.0,191.0,477,356,356,80,151,11.0,184.0,3.0,0.0,4.0,0.0,3.0,-7.0,-3.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,-7
src\rinoh\flowable.py,R0912,too-many-branches,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes, Method render of class LabeledFlowable had 14 branches. Extracted the method _compute_spillover to structure and reduce branches,6,"1000+ LOC, few classes",5,extracted method coupled with its caller,902,577,641,110,205,21.0,239.0,909,580,647,110,205,21.0,240.0,6.0,0.0,7.0,0.0,3.0,1.0,0.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,-4
src\rinoh\style.py,R1702,too-many-nested-blocks,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes," The method write_log had 6 nesting levels, while the recommendation is at most 5. I extracted two nested methods,  _log_entries and in it _handle_source. The methods extraction also fixed too-many-branches and too-many-statements in that method.",5,"1,000+ LOC",9,"Less complex code – nesting, branches, and statements",1138,782,813,128,241,26.0,365.0,1148,787,818,128,241,16.0,365.0,5.0,0.0,10.0,0.0,5.0,0.0,-10.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,-20
src\rinoh\paragraph.py,R1702,too-many-nested-blocks,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes, Method _spans_to_words of class ParagraphState had 7 nesting levels. I extracted _process_groups that goes over the groups to reduce that.,4,"method is a mess with many variables and parts interacting with each other. This is in a 1,000+ LOC file",6,code is a bit better but the extracted method has many parameters due to the interactions.,1285,863,934,138,256,27.0,364.0,1298,866,946,138,256,22.0,364.0,12.0,0.0,13.0,0.0,3.0,0.0,-5.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,-15
src\rinoh\backend\pdf\reader.py,R1702,too-many-nested-blocks,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes, Method read_dictionary_or_stream of class PDFObjectReader had 6 nesting levels. I extracted _handle_filter that takes only the dictionary as a parameter and encapsulates the creation of the stream_filter.,6,"long file, some magic strings",9,extraction is clean. Method gets one parameter. Also fixes too-many-branches,553,466,470,109,207,17.0,180.0,557,469,473,109,207,15.0,181.0,3.0,0.0,4.0,0.0,3.0,1.0,-2.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,-8
src\rinoh\backend\pdf\xobject\purepng.py,R0911,too-many-return-statements,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes," Function check_time had 7 returns I kept the return value and return it in the end of the function, avoiding too many point of exit. Other than the return there is also an exception in case the the type is not supported.",5,3000+ LOC,6,less return yet still many cases,3060,1640,1640,627,1203,34.0,573.0,3063,1643,1643,627,1203,34.0,573.0,3.0,0.0,3.0,0.0,3.0,0.0,0.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,
src\rinoh\__main__.py,R0915,too-many-statements,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes, The function main had 116 statements (more than the recommended limit of 50). Most code handle different unrelated args so I extracted methods for them.,6,rather long file,8,more structure,342,215,298,22,41,42.0,58.0,393,242,325,22,41,16.0,70.0,27.0,0.0,51.0,0.0,27.0,12.0,-26.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,-26
python\g1\apps\g1\apps\parameters.py,R0912,too-many-branches,1,1,clchiou/garage,https://github.com/clchiou/garage/pull/2,Yes, Function format_namespace had 13 branches while Pylint recommends having at most 12. I extracted format_parameter_info to make the code more structured and solve that. ,4,400 LOC,9,"clean function, covering most logic",485,231,309,16,31,13.0,61.0,492,232,310,22,43,13.0,61.0,1.0,6.0,7.0,12.0,1.0,0.0,0.0,clchiou_garage_interventions_October_04_2024.csv,clchiou/garage,
python\g1\containers\g1\containers\apps.py,R0912,too-many-branches,1,1,clchiou/garage,https://github.com/clchiou/garage/pull/2,Yes," Function cmd_pods had 14 branches while Pylint recommends having at most 12. Functions _handle_list, _handle_list were extracted to make the code more structured and solve that. ",7,regular,9,"clean functions, covering most logic",247,177,226,34,68,17.0,45.0,247,163,223,24,47,12.0,37.0,-3.0,-10.0,0.0,-21.0,-14.0,-8.0,-5.0,clchiou_garage_interventions_October_04_2024.csv,clchiou/garage,-12
python\g1\containers\g1\containers\builders.py,R0912,too-many-branches,1,1,clchiou/garage,https://github.com/clchiou/garage/pull/2,Yes," Function cmd_setup_base_rootfs had 15 branches while Pylint recommends having at most 12. Now there are dedicated methods: _cleanup_unneeded_files, _remove_config_files, _replace_config_files, _setup_unit_files, _setup_pod_exit.",3,500 LOC,10,"clean functions, covering all logic",546,179,432,49,97,14.0,46.0,560,195,443,49,97,6.0,54.0,11.0,0.0,14.0,0.0,16.0,8.0,-8.0,clchiou_garage_interventions_October_04_2024.csv,clchiou/garage,-13
python\g1\http\clients\g1\http\clients\recvfiles.py,R0912,too-many-branches,1,1,clchiou/garage,https://github.com/clchiou/garage/pull/2,Yes, ,7,regular,10,"clean functions, covering all logic",297,212,218,35,64,17.0,58.0,312,229,235,35,64,10.0,66.0,17.0,0.0,15.0,0.0,17.0,8.0,-7.0,clchiou_garage_interventions_October_04_2024.csv,clchiou/garage,-7
python\g1\http\servers\g1\http\servers\wsgi.py,R0912,too-many-branches,1,1,clchiou/garage,https://github.com/clchiou/garage/pull/2,Yes, Method _do_send_response of class HttpSession had 19 branches while Pylint recommends having at most 12. I extracted methods to make the code more structured and solve that. ,3,700 LOC. Some classes,10,"clean functions, covering all logic",710,454,525,87,158,21.0,157.0,714,462,533,87,158,12.0,159.0,8.0,0.0,4.0,0.0,8.0,2.0,-9.0,clchiou_garage_interventions_October_04_2024.csv,clchiou/garage,-16
python\g1\third-party\capnp\capnp\schemas.py,R0912,too-many-branches,1,1,clchiou/garage,https://github.com/clchiou/garage/pull/2,Yes, Method _update of class SchemaLoader had 16 branches while Pylint recommends having at most 12. I extracted methods to make the code more structured and solve that. ,4,"400 LOC, Some classes",10,"clean functions, covering all logic",456,266,309,9,15,16.0,67.0,463,273,316,9,15,6.0,70.0,7.0,0.0,7.0,0.0,7.0,3.0,-10.0,clchiou_garage_interventions_October_04_2024.csv,clchiou/garage,-12
python\g1\operations\cores\g1\operations\cores\pod_cmds.py,R0911,too-many-return-statements,1,1,clchiou/garage,https://github.com/clchiou/garage/pull/2,Yes," Function main had 7 returns while Pylint recommends having at most 6. Instead, a dictionary of commands is used.",6,"bad names, magic strings",8,function is shorter and clearer,240,115,212,6,12,7.0,20.0,237,106,209,1,2,3.0,15.0,-3.0,-5.0,-3.0,-10.0,-9.0,-5.0,-4.0,clchiou_garage_interventions_October_04_2024.csv,clchiou/garage,-5
shipyard2\shipyard2\releases\apps.py,R0911,too-many-return-statements,1,1,clchiou/garage,https://github.com/clchiou/garage/pull/2,Yes, Function main had 8 returns while Pylint recommends having at most 6. Result is kept in a variable and returned at the end.,7,regular,7,just uses a single return,131,70,116,7,14,10.0,21.0,132,71,117,7,14,10.0,21.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,clchiou_garage_interventions_October_04_2024.csv,clchiou/garage,
python\g1\bases\g1\bases\dataclasses.py,R0911,too-many-return-statements,1,1,clchiou/garage,https://github.com/clchiou/garage/pull/2,Yes,Function convert had 8 returns while Pylint recommends having at most 6. Now result is kept in a variable and returned at the end.,7,regular,7,just uses a single return,73,34,48,6,12,3.0,3.0,66,30,44,6,12,3.0,3.0,-4.0,0.0,-7.0,0.0,-4.0,0.0,0.0,clchiou_garage_interventions_October_04_2024.csv,clchiou/garage,
python\g1\operations\cores\g1\operations\cores\token_cmds.py,R0911,too-many-return-statements,1,1,clchiou/garage,https://github.com/clchiou/garage/pull/2,Yes," Function main had 7 returns while Pylint recommends having at most 6. Instead, a dictionary of commands is used.",7,regular,8,function is shorter and clearer,278,139,255,8,15,7.0,20.0,277,132,254,2,3,3.0,15.0,-1.0,-6.0,-1.0,-12.0,-7.0,-5.0,-4.0,clchiou_garage_interventions_October_04_2024.csv,clchiou/garage,-5
python\g1\operations\cores\g1\operations\cores\apps.py,R0911,too-many-return-statements,1,1,clchiou/garage,https://github.com/clchiou/garage/pull/2,Yes," Function main had 7 returns while Pylint recommends having at most 6. Instead, a dictionary of commands is used.",7,regular,8,function is shorter and clearer,53,41,43,6,12,7.0,9.0,50,33,41,0,0,2.0,4.0,-2.0,-6.0,-3.0,-12.0,-8.0,-5.0,-5.0,clchiou_garage_interventions_October_04_2024.csv,clchiou/garage,-5
src\acquisition\kcdc\kcdc_update.py,W0718,broad-exception-caught,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes,"  Catching Exception might hide unexpected exceptions (e.g., due to new code that will be added). Function update_from_data  catches exception (line 152)  The try section is cursor's execute Exception was changed to mysql.connector.Error  For details see https://dev.mysql.com/doc/connector-python/en/connector-python-api-errors-error.html ",6,"unclear variable names – row1, row2",6,exceptions are clearer,187,97,123,13,25,7.0,19.0,187,97,123,13,25,7.0,19.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,
src\server\_query.py,R0133,comparison-of-constants,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes," The code was    def dummy_gen():        if 3 >4:            yield {}  Clearly, the dummy_gen is not intended to reach the yield.To clarify that, I changed the condition to False.I still wonder why the function is needed.",6,500 LOC yet uses type hints,6,intention is a bit clearer,520,276,384,51,94,25.0,124.0,520,276,384,50,92,25.0,124.0,0.0,-1.0,0.0,-2.0,0.0,0.0,0.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,
src\acquisition\paho\paho_db_update.py,C0301,line-too-long,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes,Made unreadable line shorter ,5,"nested, many returns, 300 LOC",6,Made unreadable line shorter ,299,134,202,29,57,10.0,33.0,301,134,204,32,63,10.0,33.0,2.0,3.0,2.0,6.0,0.0,0.0,0.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,
src\acquisition\wiki\wiki_util.py,C0301,line-too-long,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes,Made unreadable line shorter ,7,constants definition,5,Made unreadable line shorter ,156,8,148,2,4,1.0,1.0,157,8,148,2,4,1.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,
src\acquisition\fluview\impute_missing_values.py,C0301,line-too-long,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes,Made readable line shorter,5,"300 LOC, magic strings, unclear variable names",5,Made readable line shorter,341,129,162,13,23,7.0,34.0,344,129,165,13,23,7.0,34.0,3.0,0.0,3.0,0.0,0.0,0.0,0.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,
scripts\report_missing_covidcast_meta.py,C0301,line-too-long,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes,Made unreadable line shorter,7,regular,7,Made unreadable line shorter,87,57,72,20,40,18.0,30.0,92,57,77,20,40,18.0,30.0,5.0,0.0,5.0,0.0,0.0,0.0,0.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,
src\server\endpoints\fluview_meta.py,C0301,line-too-long,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes,Made query more readable,7,regular,6,Made query more readable,26,16,16,0,0,1.0,2.0,29,16,19,3,6,1.0,2.0,3.0,3.0,3.0,6.0,0.0,0.0,0.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,
src\server\utils\__init__.py,C0301,line-too-long,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes,Made unreadable line shorter ,7,just import in init,6,import is readable,1,1,1,0,0,,,5,1,5,0,0,,,4.0,0.0,4.0,0.0,0.0,,,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,
src\server\endpoints\covid_hosp_facility_lookup.py,C0301,line-too-long,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes,Made readable line shorter ,7,regular,5,Made readable line shorter ,68,32,55,0,0,6.0,6.0,69,32,56,0,0,6.0,6.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,
src\server\endpoints\covidcast_utils\meta.py,C0301,line-too-long,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes,Made readable line shorter,7,regular,5,Made readable line shorter ,36,40,30,3,6,5.0,13.0,39,40,33,3,6,5.0,13.0,3.0,0.0,3.0,0.0,0.0,0.0,0.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,
src\server\main.py,C0301,line-too-long,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes,Made readable line shorter,7,regular,5,Made readable line shorter ,90,60,66,8,15,3.0,6.0,91,60,67,8,15,3.0,6.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,
src\server\_exceptions.py,C0301,line-too-long,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes,Made readable line shorter,7,regular,5,Made readable line shorter ,38,24,27,2,3,3.0,17.0,40,24,29,2,3,3.0,17.0,2.0,0.0,2.0,0.0,0.0,0.0,0.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,
src\maintenance\signal_dash_data_generator.py,C0301,line-too-long,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes,Made url more readable,6,magic numbers,6,Made url more readable,284,177,209,21,38,9.0,39.0,287,177,212,24,44,9.0,39.0,3.0,3.0,3.0,6.0,0.0,0.0,0.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,
src\server\endpoints\delphi.py,C0301,line-too-long,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes,made readable query more structured,7,regular,6,made readable query more structured,32,22,22,0,0,2.0,2.0,35,22,25,3,6,2.0,2.0,3.0,3.0,3.0,6.0,0.0,0.0,0.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,
src\common\covidcast_row.py,C0301,line-too-long,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes,Made readable line shorter,8,uses type hints,5,Made readable line shorter,150,97,94,14,28,4.0,27.0,151,97,95,14,28,4.0,27.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,
src\maintenance\covidcast_meta_cache_updater.py,C0325,superfluous-parens,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes,Removed unneeded parenthesis ,7,regular,5,Removed unneeded parenthesis ,83,50,55,10,17,5.0,6.0,83,50,55,10,17,5.0,6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,
src\acquisition\quidel\quidel.py,R0912,too-many-branches,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes, Method prepare_measurements of class QuidelData  had 19 branches while Pylint recommends having at most 12. I extracted the methods _prepare_device_id and to make the code more structured and solve that.,6,"magic values, 300 LOC",9,"extracted methods has too many parameters, large part is extracted",326,200,245,95,171,23.0,91.0,347,206,260,95,171,12.0,90.0,15.0,0.0,21.0,0.0,6.0,-1.0,-11.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,-13
src\acquisition\covid_hosp\common\database.py,R0912,too-many-branches,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes, Method insert_dataset of class Database had 13 branches while Pylint recommends having at most 12. I extracted the method _process_rows   to make the code more structured and solve that.,7,regular,7,"high scope yet the extracted function signature has many parameters, some of them are modified.",284,122,159,22,44,20.0,41.0,295,124,169,22,44,12.0,42.0,10.0,0.0,11.0,0.0,2.0,1.0,-8.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,-8
src\acquisition\wiki\wiki_download.py,R0912,too-many-branches,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes, Function run had 24 branches while Pylint recommends having at most 12. I extracted the debug_log function (print in debug mode) which is reused a few times. I also extracted methods to make the code more structured and solve that.,5,"300 LOC, lacks abstraction and structure, repeating parts",10,"code reuse reduced complexity, clean extracted functions cover a lot of scope",354,193,257,49,97,28.0,49.0,369,200,265,49,97,15.0,50.0,8.0,0.0,15.0,0.0,7.0,1.0,-13.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,-13
src\server\_printer.py,R0911,too-many-return-statements,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes, Function create_printer had 7 returns while Pylint recommends having at most 6. The code checks for a list of options.I removed some into a dictionary.I also assigned the results into a variable and used a single return at the end of the function., , , , ,273,198,188,38,66,7.0,75.0,274,194,186,34,58,5.0,71.0,-2.0,-4.0,1.0,-8.0,-4.0,-4.0,-2.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,-4
src\acquisition\covidcast\csv_importer.py,R0911,too-many-return-statements,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes, Static method extract_and_check_row of class CsvImporter had 14 returns while Pylint recommends having at most 6. I extracted the functions _validate_geo_type  and _validate_geo_id to make the code more structured and solve that.,4,"400 LOC, unstructured code, magic numbers",8,"small functions, high scope. Should have been static methods too but were not identified",416,244,261,100,171,29.0,83.0,440,255,272,101,173,19.0,86.0,11.0,1.0,24.0,2.0,11.0,3.0,-10.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,-19
src\acquisition\cdcp\cdc_upload.py,R0915,too-many-statements,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes, Function upload  had 68 statements while Pylint recommends having at most 50. I added the cursor as a parameter to its external functions and moved them out.,5,"variables named a,b,c",7,"methods were internal, not used elsewhere",278,107,173,20,34,7.0,8.0,279,107,173,20,34,7.0,22.0,0.0,0.0,1.0,0.0,0.0,14.0,0.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,
src\server\endpoints\covidcast.py,R0915,too-many-statements,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes, Function handle_meta had 65 statements while Pylint recommends having at most 50. I extracted _process_signals to make the code more structured and solve that. ,4,"500 LOC, unstructured code, magic numbers",7,"high scope yet the extracted function signature has many parameters, some of them are modified.",556,398,414,101,190,35.0,88.0,560,400,417,101,190,19.0,89.0,3.0,0.0,4.0,0.0,2.0,1.0,-16.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,-16
src\acquisition\ght\ght_update.py,R0915,too-many-statements,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes, Function update had 56 statements while Pylint recommends having at most 50. I extracted _process_values to make the code more structured and solve that. ,4,"400 LOC, unstructured code, magic numbers",7,"signature is large, parameters are modified",426,109,303,35,70,20.0,33.0,429,111,305,35,70,15.0,34.0,2.0,0.0,3.0,0.0,2.0,1.0,-5.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,-5
src\acquisition\nidss\taiwan_update.py,W0401,wildcard-import,1,1,cmu-delphi/delphi-epidata/,https://github.com/cmu-delphi/delphi-epidata/pull/1568,Yes," Wildcard imports (import *) make it harder to understand what is imported from where. Removing it is also a defensive programming act, lowering the probability of collisions due to future new imports or objects.  Instead, I imported explicitly delta_epiweeks, add_epiweeks from delphi.utils.epiweek (line 85)",6,unclear variable names,6,import is clearer,174,58,73,5,9,7.0,11.0,173,58,73,5,9,7.0,11.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,cmu-delphi_delphi-epidata_interventions_December_06_2024.csv,cmu-delphi/delphi-epidata/,
util\crs-rules-check\rules-check.py,C0325,superfluous-parens,1,1,coreruleset/coreruleset,https://github.com/coreruleset/coreruleset/pull/3837,Yes," Code calls  del(self.undef_txvars[-1]) While it works, while it works, del is a python keyword and not a function. Hence it is better to call del self.undef_txvars[-1]  See https://www.w3schools.com/python/ref_keyword_del.asp ",4,"A very long file, uses magic numbers, if a==False, variables called a and d",6,Might have pedagogic value,1133,727,863,277,548,47.0,222.0,1133,727,863,277,548,47.0,222.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,coreruleset_coreruleset_interventions_September_27_2024.csv,coreruleset/coreruleset,
src\views\menu.py,W0718,broad-exception-caught,1,1,gabfl/vault,https://github.com/gabfl/vault/pull/82,Yes," Code deliberately catches Exception, after catching KeyboardInterrupt.
However, looking at the protected code it seems that no other exception can be raised.
Hence, instead of narrowing the exception, I removed it.",7,OK code,6,improved readability,189,104,99,17,34,10.0,30.0,187,102,97,17,34,10.0,29.0,-2.0,0.0,-2.0,0.0,-2.0,-1.0,0.0,gabfl_vault_interventions_September_24_2024.csv,gabfl/vault,-1
src\modules\autocomplete.py,W0718,broad-exception-caught,1,1,gabfl/vault,https://github.com/gabfl/vault/pull/82,Yes," Code deliberately catches Exception, after catching KeyboardInterrupt.
However, looking at the protected code it seems that no other exception can be raised.
Hence, instead of narrowing the exception, I removed it.",7,OK code,6,improved readability,74,44,40,8,15,8.0,16.0,72,42,38,8,15,8.0,15.0,-2.0,0.0,-2.0,0.0,-2.0,-1.0,0.0,gabfl_vault_interventions_September_24_2024.csv,gabfl/vault,-1
src\modules\misc.py,W0718,broad-exception-caught,1,1,gabfl/vault,https://github.com/gabfl/vault/pull/82,Yes," Exception is too wide. os.path.exists does not throw exceptions. os.makedirs might throw OSError (e.g., in a bad path).  See https://stackoverflow.com/questions/2383816/how-can-i-make-an-error-verifiy-with-os-makedirs-in-python As extra safety, though the code checks just before for the directory, catch it too in case a different process will be able to create it before.",6,minor not optimal implementations,6,improved readability,165,93,85,15,27,10.0,27.0,165,93,85,15,27,10.0,27.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,gabfl_vault_interventions_September_24_2024.csv,gabfl/vault,
src\views\setup.py,C0301,line-too-long,1,1,gabfl/vault,https://github.com/gabfl/vault/pull/82,No,Line was one letter too long,6,some multiple returns,5,alert not important,107,60,58,7,14,5.0,14.0,108,60,59,8,16,5.0,14.0,1.0,1.0,1.0,2.0,0.0,0.0,0.0,gabfl_vault_interventions_September_24_2024.csv,gabfl/vault,
src\lib\Config.py,C0301,line-too-long,1,1,gabfl/vault,https://github.com/gabfl/vault/pull/82,No,"Made the long, yet readable, comment shorter",7,OK code,5,alert not important,92,41,42,2,3,2.0,11.0,93,41,43,2,3,2.0,11.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,gabfl_vault_interventions_September_24_2024.csv,gabfl/vault,
src\views\import_export.py,C0301,line-too-long,1,1,gabfl/vault,https://github.com/gabfl/vault/pull/82,No,Made a readable comment line shorter,7,uses strings as return values,5,alert not important,189,88,90,12,22,5.0,22.0,190,88,90,12,22,5.0,22.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,gabfl_vault_interventions_September_24_2024.csv,gabfl/vault,
src\tools\troubleshoot_db.py,R1719,simplifiable-if-expression,1,1,gabfl/vault,https://github.com/gabfl/vault/pull/82,Yes," if result_proxy.fetchall() == [(123,)] can result in only True or False, the external condition is not needed.
However, if result_proxy.fetchall() might return Noe, the external condition can translate it to False.

The external condition hurt readability since it takes a bit to verify what it does.
bool is a simpler implementation

See
https://stackoverflow.com/questions/76094401/the-if-expression-can-be-replaced-with-test-simplifiable-if-expression",7,OK code,6,improved readability,133,85,79,9,18,2.0,13.0,133,85,79,9,18,2.0,12.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,gabfl_vault_interventions_September_24_2024.csv,gabfl/vault,-1
src\views\categories.py,C0325,superfluous-parens,1,1,gabfl/vault,https://github.com/gabfl/vault/pull/82,Yes,Replaced (True) to True,6,using letters instead of constants,6,improved readability,298,150,146,32,58,7.0,44.0,298,150,146,32,58,7.0,44.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,gabfl_vault_interventions_September_24_2024.csv,gabfl/vault,
src\stacosys\service\mail.py,W0718,broad-exception-caught,1,1,kianby/stacosys,https://github.com/kianby/stacosys/pull/22,Yes," Catching Exception might hide unexpected exceptions, like those that might be raised due to future modification. Therefore, it is recommended to narrow the exceptions.  The method send of the class Mailer catches Exception in line 57. MIMEText does not raise exceptions (if not using attachments). See https://docs.python.org/3/library/email.mime.html  Most code is handled in an inner exception handling. In order to catch exception from SMTP_SSL I used SMTPException See https://docs.python.org/3/library/smtplib.html ",9,"clean, small, focused class",6,A more focused exception,59,44,46,0,0,3.0,10.0,59,44,46,0,0,3.0,10.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,kianby_stacosys_interventions_October_04_2024.csv,kianby/stacosys,
mpcontribs-api\mpcontribs\api\contributions\document.py,W0718,broad-exception-caught,1,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1857/,Yes, Catching Exception instead of specific exceptions might hide unexpected ones. Function format_cell caught Exception. isnan does not raise exceptions https://docs.python.org/3/library/math.html#math.isnan str might lead to UnicodeEncodeError https://stackoverflow.com/questions/33556465/is-there-any-object-can-make-str-function-throw-error-or-exception-in-python ,6,Low cohesion,6,"More specific exception, seems that the exception handling is not needed there in the first place",327,207,257,41,74,9.0,53.0,327,207,257,41,74,9.0,53.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,materialsproject_MPContribs_interventions_October_06_2024.csv,materialsproject/MPContribs,
mpcontribs-api\mpcontribs\api\attachments\document.py,C0301,line-too-long,1,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1857/,Yes,Made a readable line shorter,7,regular,5,Made a readable line shorter,92,61,67,6,11,5.0,15.0,93,61,68,6,11,5.0,15.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,materialsproject_MPContribs_interventions_October_06_2024.csv,materialsproject/MPContribs,
mpcontribs-api\gunicorn.conf.py,C0301,line-too-long,1,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1857/,Yes," Was a very long format line with 135 characters which wasn't readable. I reduced it to 107, higher than the recommended 100, while keeping the main part in the same line.",7,a small config file,6,now it is readable,15,12,14,0,0,,,17,12,16,0,0,,,2.0,0.0,2.0,0.0,0.0,,,materialsproject_MPContribs_interventions_October_06_2024.csv,materialsproject/MPContribs,
mpcontribs-api\mpcontribs\api\projects\document.py,R1702,too-many-nested-blocks,1,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1857/,Yes," The post_save class method had 6 nesting levels while pylint recommends not to have more than 5. I extracted the small and targeted update_columns_by_flat method, with 3 nesting levels.",5,"Almost 400 LOC, many classes, long method, magic strings",7,Code improved locally yet more work needed,388,205,312,34,65,33.0,79.0,392,208,315,34,65,30.0,78.0,3.0,0.0,4.0,0.0,3.0,-1.0,-3.0,materialsproject_MPContribs_interventions_October_06_2024.csv,materialsproject/MPContribs,-3
mpcontribs-api\mpcontribs\api\notebooks\views.py,R0915,too-many-statements,1,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1857/,Yes, The make function had 74 statement while pylint recommends to have at most 50.  I extracted small methods handling parts of the function. ,5,function is long and structuring is moderate,9,"Extracted methods are small and dedicated, most with a compact signature",293,196,232,27,46,28.0,52.0,321,215,251,27,46,16.0,60.0,19.0,0.0,28.0,0.0,19.0,8.0,-12.0,materialsproject_MPContribs_interventions_October_06_2024.csv,materialsproject/MPContribs,-12
bot.py,W0718,broad-exception-caught,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes," Catching Exception might hide unexpected exceptions (e.g., due to new code that will be added). The method cogSetup of the class Bot catches exception (line 81).The try section is                await self.load_extension(f""alexBot.cogs.{cog}"")                log.info(f'loaded {cog}')   The exceptions are of the discord parent class in load_extension.https://discordpy.readthedocs.io/en/latest/ext/commands/api.html#discord.ext.commands.Bot.load_extensionI narrowed the Exception to the list of specific possible exceptions.",5,"has code outside function in the beginning, a class in the middle – low cohesion",6,Possible exceptions are clearer,139,90,101,2,4,4.0,17.0,142,90,104,2,4,4.0,17.0,3.0,0.0,3.0,0.0,0.0,0.0,0.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,
alexBot\cogs\utils.py,W0718,broad-exception-caught,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes,"Catching Exception might hide unexpected exceptions (e.g., due to new code that will be added). 
The method roll of the class Utils catches exception (line 44).

The try section seems to protect discord's send_message
See here its exceptions
https://discordpy.readthedocs.io/en/stable/interactions/api.html#discord.InteractionResponse.send_message

I narrowed the Exception to the list of specific possible exceptions.",7,regular,6,Possible exceptions are clearer,139,106,112,11,22,9.0,33.0,142,106,115,11,22,9.0,33.0,3.0,0.0,3.0,0.0,0.0,0.0,0.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,
alexBot\cogs\sugery.py,W0718,broad-exception-caught,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes," Catching Exception might hide unexpected exceptions (e.g., due to new code that will be added). Method sugery_update of class Sugery  catches exception (line 157) The try section is mainly member.edit  Exception was changed to discord.ClientException, discord.Forbidde, and discord.HTTPException  For details see https://discordpy.readthedocs.io/en/latest/api.html#discord.Member.edit ",6,magic numbers,6,Possible exceptions are clearer,185,127,156,32,54,26.0,44.0,187,127,158,32,54,26.0,44.0,2.0,0.0,2.0,0.0,0.0,0.0,0.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,
alexBot\cogs\configs.py,R1719,simplifiable-if-expression,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes," The if is not needed. Using ""!="" instead of ""=="" further simplifies the expression.",5,"many returns, magic strings",7,original expression had implicit negation which was confusing,177,124,152,31,55,14.0,52.0,177,124,152,31,55,14.0,51.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,-1
alexBot\disabled\bots.py,R0912,too-many-branches,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes, Method on_member_update of class Bots had 13 branches while Pylint recommends having at most 12.  I fixed that by extracting the method _get_messagable.,6,some magic numbers,6,"Reduced one branch, code is a bit more structured.",120,67,76,21,39,13.0,29.0,124,70,79,21,39,12.0,28.0,3.0,0.0,4.0,0.0,3.0,-1.0,-1.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,-1
alexBot\cogs\reminders.py,R0912,too-many-branches,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes," The method remind of the class Reminders had 27 branches while Pyline recommends having at most 12.  I extracted methods, making the code more structured and readable and solving the alert.",1,"Very complex and structured code, 400 LOC ",10,somehow the extracted methods were small and clean ,385,257,329,58,102,26.0,90.0,421,278,350,59,103,14.0,96.0,21.0,1.0,36.0,1.0,21.0,6.0,-12.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,-13
alexBot\cogs\flight.py,R0912,too-many-branches,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes, Method mater of class Flight had 18 branches while Pylint recommends having at most 12. I extracted the methods _compute_magdec and _handle_wind to make the code more structured and solve that. ,7,regular,8,"extracted small signature methods covering large parts of method, one parameter is modified",153,94,117,19,35,16.0,32.0,160,99,122,19,35,10.0,29.0,5.0,0.0,7.0,0.0,5.0,-3.0,-6.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,-6
alexBot\cogs\mudae.py,R0912,too-many-branches,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes, Method extract_series of class Mudae had 14 branches while Pylint recommends having at most 12.  I extracted the method  _scan_pages  to make the code more structured and solve that.  ,7,regular,7,"extracted a small function, impact is also small",280,165,233,56,105,22.0,68.0,282,167,235,56,105,20.0,68.0,2.0,0.0,2.0,0.0,2.0,0.0,-2.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,-2
alexBot\cogs\errors.py,R0912,too-many-branches,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes, Method on_command_error of class CommandErrorHandler  had 19 branches while Pylint recommends having at most 12.  I aggregated error to message mapping and extracted methods to make the code more structured and solve that.,7,regular,9,Most benefit comes from aggregating similar error to message mapping,118,75,88,10,19,22.0,36.0,130,73,97,11,25,14.0,36.0,9.0,1.0,12.0,6.0,-2.0,0.0,-8.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,-8
alexBot\cogs\voiceStats.py,R0912,too-many-branches,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes, Method on_voice_state_update of class VoiceStats  had 14 branches while Pylint recommends having at most 12. Some of the ifs assign the result into a variable. I used a direct assignment of the Boolean if expression instead.,5,tendency to many returns breaks the structure,10,Direct assignment is simpler and better,270,194,232,55,94,22.0,70.0,264,185,223,55,94,19.0,67.0,-9.0,0.0,-6.0,0.0,-9.0,-3.0,-3.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,-3
alexBot\cogs\voiceTTS.py,R0912,too-many-branches,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes,Method vc_tts of class VoiceTTS  had 15 branches while Pylint recommends having at most 12. I extracted the validation into a method to make the code more structured and solve that.,5,tendency to many returns breaks the structure,9,method is simple and clean,282,197,227,47,91,18.0,79.0,291,202,232,48,92,15.0,81.0,5.0,1.0,9.0,1.0,5.0,2.0,-3.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,-6
alexBot\cogs\smartHome.py,R0915,too-many-statements,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes,Method on_voice_state_update of class PhoneMonitor  had 66 statements while Pylint recommends having at most 50.,5,tendency to many returns breaks the structure,7, message and memberList are set by different (possibly intersecting) conditions in code. That forces transferring them and coupling the functions.,364,234,302,54,100,43.0,91.0,372,239,307,54,100,31.0,91.0,5.0,0.0,8.0,0.0,5.0,0.0,-12.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,-12
alexBot\cogs\fun.py,W0107,unnecessary-pass,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes,Removed unnecessary pass,5,"many returns, magic numbers",6,The pass might be confusing,227,154,192,27,52,23.0,42.0,226,153,191,27,52,23.0,42.0,-1.0,0.0,-1.0,0.0,-1.0,0.0,0.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,
src\itsdangerous\timed.py,W0718,broad-exception-caught,1,1,pallets/itsdangerous,https://github.com/pallets/itsdangerous/pull/399,Yes,"Catching Exception might hide unexpected exceptions, like those that might be raised due to future modification. Therefore, it is recommended to narrow the exceptions.  The method unsign of class TimestampSigner catches exception in line 116.The try section just calls bytes_to_int(base64_decode(ts_bytes)) from encoding.py.base64_decode  in line 37    except (TypeError, ValueError) as e:             raise BadData(""Invalid base64-encoded data"") from e  raises BadData instead of TypeError and ValueError. Note that binascii.Error is not translated and might be raised.  https://docs.python.org/3/library/base64.html#base64.b64decode  I therefore replaced catching Exception in catching  (BadData, base64.binascii.Error)  https://stackoverflow.com/questions/43560936/python-how-to-catch-this-error-cant-source-error-name-binascii-error/43561287  bytes_to_int, also from encoding.py does not seem to raise exceptions.",6,few class in the same file,6,unlogged exception narrowed. A better solution was handling the base64 exception in the called method,228,110,136,15,30,14.0,35.0,229,111,137,15,30,14.0,35.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,pallets_itsdangerous_interventions_October_05_2024.csv,pallets/itsdangerous,0
src\itsdangerous\signer.py,W0718,broad-exception-caught,1,1,pallets/itsdangerous,https://github.com/pallets/itsdangerous/pull/399,Yes," Catching Exception might hide unexpected exceptions, like those that might be raised due to future modification. Therefore, it is recommended to narrow the exceptions.  The method verify_signature of class Signer catches exception in line 233.The try section just calls base64_decode from encoding.py, which in line 37   except (TypeError, ValueError) as e:        raise BadData(""Invalid base64-encoded data"") from e  raises BadData instead of TypeError and ValueError.Note that binascii.Error is not translated and might be raised.    https://docs.python.org/3/library/base64.html#base64.b64decode I therefore replaced catching Exception in catching  (BadData, base64.binascii.Error)    ",6,few class in the same file,6,unlogged exception narrowed. A better solution was handling the base64 exception in the called method,266,131,124,19,36,6.0,45.0,268,133,126,19,36,6.0,45.0,2.0,0.0,2.0,0.0,2.0,0.0,0.0,pallets_itsdangerous_interventions_October_05_2024.csv,pallets/itsdangerous,
sync-sheet.py,R0912,too-many-branches,1,1,progettowinstonsmith/e-privacy-site,https://github.com/progettowinstonsmith/e-privacy-site/pull/6,Yes," The function setup_program_session had 16 branches while Pylint recommends not to have more than 12.The function was written in a structured way so I extracted a few blocks into functions, solving the alert.This also made the function more readable.",4,"700+ LOC, unused arguments, magic constants",8,"Unrelated functions, few parameters, parameters being modified",704,532,578,178,346,15.0,158.0,714,539,585,178,346,9.0,161.0,7.0,0.0,10.0,0.0,7.0,3.0,-6.0,progettowinstonsmith_e-privacy-site_interventions_October_05_2024.csv,progettowinstonsmith/e-privacy-site,-10
sync-sheet-on-org.py,R0912,too-many-branches,1,1,progettowinstonsmith/e-privacy-site,https://github.com/progettowinstonsmith/e-privacy-site/pull/6,Yes,"Function setup_program_session had 15 branches while Pylint recommends not to have more than 12.I extracted a method for handling talk, fixing the alert.",3,"800+ LOC,if False,  unused arguments, magic constants",7,"Unrelated function, few parameters, parameters being modified. Did not extracted a function from another block that had an undefined variable.",894,709,767,211,408,15.0,223.0,897,711,769,211,408,15.0,224.0,2.0,0.0,3.0,0.0,2.0,1.0,0.0,progettowinstonsmith_e-privacy-site_interventions_October_05_2024.csv,progettowinstonsmith/e-privacy-site,-6
jarviscli\plugins\website_status.py,W0718,broad-exception-caught,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes," Catching Exception might hide unexpected exceptions (e.g., due to new code that will be added). Function check_website_status  catches Exception (line 31)  The try section is accessing url.  Exception was changed to urllib.error.URLError, urllib.error.HTTPError  For details see https://docs.python.org/3/library/urllib.error.html ",7,regular,6,Relevant exceptions are clearer now,40,31,33,6,12,6.0,6.0,40,31,33,6,12,6.0,6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\history.py,W0718,broad-exception-caught,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,"  Catching Exception might hide unexpected exceptions (e.g., due to new code that will be added). Method _get_data of class history  catches Exception (line 227)  The try section makes a request, format as json, and lookup properties.  Exception was changed to requests.exceptions.RequestException, KeyError, and json.JSONDecodeError   ",6,many return points.,7,"Relevant exceptions are clearer now, error messages fit the exceptions ",251,156,175,26,43,12.0,41.0,257,160,181,26,43,12.0,42.0,6.0,0.0,6.0,0.0,4.0,1.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,1
jarviscli\plugins\imgur.py,W0718,broad-exception-caught,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes," Catching Exception might hide unexpected exceptions (e.g., due to new code that will be added). Function imgur  catches Exception (line 60)  The try section is   Exception was changed to requests.RequestException (requests.post), json.JSONDecodeError (json.loads), IOError (open(file, 'rb').read()), KeyError (objresp['data']['link']) ",7,regular,7,"Relevant exceptions are clearer now, error messages fit the exceptions ",66,43,48,4,8,4.0,5.0,71,49,54,4,8,7.0,8.0,6.0,0.0,5.0,0.0,6.0,3.0,3.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,3
jarviscli\plugins\taste_dive.py,W0718,broad-exception-caught,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,"  Catching Exception might hide unexpected exceptions (e.g., due to new code that will be added). Method _get_data of class TasteDive  catches Exception (line 139)  The try section gets a request, formats as json and looks up properties.   Exception was changed to requests.RequestException, KeyError, ValueError, json.JSONDecodeError  For details see https://docs.python.org/3/library/exceptions.html https://requests.readthedocs.io/en/latest/_modules/requests/exceptions/ https://docs.python.org/3/library/json.html ",5,unstructured code.,6,Relevant exceptions are clearer now,212,118,125,16,31,8.0,34.0,213,119,126,16,31,8.0,34.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
installer\__main__.py,W0718,broad-exception-caught,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes," Catching Exception might hide unexpected exceptions (e.g., due to new code that will be added). The code catches BaseException (line 23)  The try section mainly imports and change a directory   Exception was changed to ImportError, OSError  For details see https://docs.python.org/3/library/exceptions.html#ImportError, https://docs.python.org/3/library/exceptions.html#OSError ",7,regular,7,"Relevant exceptions are clearer now, error messages fit the exceptions ",28,21,21,1,1,,,34,27,27,1,1,,,6.0,0.0,6.0,0.0,6.0,,,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\lyrics.py,W0718,broad-exception-caught,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes," ""Return output"", in the try section, cannot raise exceptions (output was already computed). The exception handling section will not be reached so it is better to remove it.",5,"TODOs. Unused varaibles, many returns",8,No exception handling is best when not needed,103,57,52,5,7,7.0,19.0,100,54,49,5,7,7.0,18.0,-3.0,0.0,-3.0,0.0,-3.0,-1.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-1
jarviscli\plugins\news.py,W0718,broad-exception-caught,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes," Catching BaseException might hide unexpected exceptions (e.g., due to new code that will be added). Method parse_articles of class News  catches BaseException (line 269)  The try section converts index to int BaseException was changed to ValueError  For details see https://docs.python.org/3/library/exceptions.html#ValueError",5,"not structured, many returns, string constructions with +",6,Relevant exception is clearer now,281,191,221,66,130,17.0,66.0,281,191,221,66,130,17.0,66.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\qr_generator.py,W0718,broad-exception-caught,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes," Catching Exception might hide unexpected exceptions (e.g., due to new code that will be added). Method _generate_qr of class QRGenerator  catches Exception (line 134)  The try section is requests a url (requests.exceptions.RequestException) and writes to a file (IOError) ",6,"repeated code, magic names",7,"Relevant exceptions are clearer now, error messages fit the exceptions ",167,97,106,9,18,7.0,23.0,165,97,105,9,18,7.0,24.0,-1.0,0.0,-2.0,0.0,0.0,1.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,1
jarviscli\plugins\fruit_nutrition.py,W0718,broad-exception-caught,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes," Catching Exception might hide unexpected exceptions (e.g., due to new code that will be added). Function fruit_nutrition  catches Exception (line 59)  Exception was changed to ValueError (e.g., in converting age to a number), KeyError (e.g., nutritions['sugar'] if there is no key 'sugar')  For details see https://docs.python.org/3/library/exceptions.html#ValueError https://docs.python.org/3/library/exceptions.html#KeyError ",5,"returns in the middle of code, magic numbers",7,"Relevant exceptions are clearer now, error messages fit the exceptions ",60,39,38,18,35,8.0,8.0,62,41,40,18,35,9.0,9.0,2.0,0.0,2.0,0.0,2.0,1.0,1.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,1
jarviscli\packages\memory\memory.py,W0718,broad-exception-caught,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes," Catching BaseException might hide unexpected exceptions (e.g., due to new code that will be added). Method get_data of class Memory  catches BaseException (line 61)  The try section is  return self.data[key] BaseException was changed to AttributeError (if there is no member data) and KeyError(if the key is not in data)  For details see https://docs.python.org/3/library/exceptions.html#KeyError ",7,regular,6,Relevant exceptions are clearer now,109,49,40,1,2,2.0,14.0,109,49,40,1,2,2.0,14.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\morse_code.py,W0718,broad-exception-caught,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes," Catching BaseException might hide unexpected exceptions (e.g., due to new code that will be added). Method decoder of class morsecode  catches BaseException (line 131)  The try section is a list lookup BaseException was changed to ValueError  For details see https://docs.python.org/3/library/exceptions.html#ValueError",7,regular,6,Relevant exception is clearer now,151,87,111,16,30,5.0,27.0,151,87,111,16,30,5.0,27.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\wiki.py,C0301,line-too-long,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,made long line more readable  ,7,regular,6,made long line more readable,70,56,54,9,18,7.0,21.0,73,56,57,9,18,7.0,21.0,3.0,0.0,3.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\pdftoimg.py,C0301,line-too-long,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,made long line more readable  ,7,regular,5,made long lines shorter,80,51,48,9,19,9.0,18.0,82,51,50,9,19,9.0,18.0,2.0,0.0,2.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\wifi_password_getter.py,C0301,line-too-long,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,made long line more readable  ,6,Keep adding -1 in mapping instead of general solution,5,made long lines shorter,230,120,133,38,69,5.0,39.0,231,120,134,38,69,5.0,39.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\bmi.py,C0301,line-too-long,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,made long line more readable  ,6,magic numbers,6,made long line more readable  ,150,124,118,31,61,17.0,39.0,153,124,121,31,61,17.0,39.0,3.0,0.0,3.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\upside_down.py,C0301,line-too-long,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,made long line more readable  ,7,regular,6,made long line more readable  ,21,20,17,4,6,4.0,5.0,24,20,20,4,6,4.0,5.0,3.0,0.0,3.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\moon_phase.py,C0301,line-too-long,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,made long line shorter,7,ASCII art!,5,made long lines shorter,202,86,155,35,70,8.0,21.0,203,86,155,35,70,8.0,21.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\routine.py,C0301,line-too-long,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,made long line shorter,7,regular,5,made long lines shorter,72,52,49,5,9,4.0,15.0,73,52,49,5,9,4.0,15.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\timeconv.py,C0301,line-too-long,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,made long line shorter,7,regular,5,made long lines shorter,148,74,96,28,56,8.0,27.0,149,74,96,28,56,8.0,27.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\countryinfo.py,C0301,line-too-long,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,made long line more readable  ,7,regular,5,made long lines shorter,76,55,54,13,26,5.0,15.0,77,55,54,13,26,5.0,15.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\cocktail.py,C0301,line-too-long,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,made long line more readable  ,6,if cond return True,6,made long line more readable  ,215,116,149,29,56,5.0,45.0,217,118,151,29,56,5.0,45.0,2.0,0.0,2.0,0.0,2.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\twitter_trends.py,C0301,line-too-long,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,made long line more readable  ,6,magic numbers,6,made long line more readable  ,146,94,94,14,27,5.0,37.0,148,97,96,14,27,5.0,37.0,2.0,0.0,2.0,0.0,3.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\utilities\notification.py,C0301,line-too-long,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,made long line more readable  ,7,regular,6,made long line more readable  ,75,51,48,2,4,1.0,5.0,82,53,55,2,4,1.0,5.0,7.0,0.0,7.0,0.0,2.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\evaluator.py,C0301,line-too-long,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,made long line more readable  ,5,300 LOC,6,made long line more readable  ,392,250,249,33,64,13.0,49.0,395,253,252,33,64,13.0,49.0,3.0,0.0,3.0,0.0,3.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\battery.py,C0301,line-too-long,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes, made a long line more readable,7,regular,6, made a long line more readable,125,57,68,11,21,4.0,9.0,128,57,71,11,21,4.0,9.0,3.0,0.0,3.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\distance.py,C0301,line-too-long,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,made long line shorter,7,regular,5,made long lines shorter,52,35,34,3,5,4.0,9.0,55,35,37,3,5,4.0,9.0,3.0,0.0,3.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\curl.py,C0301,line-too-long,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,made long line more readable  ,6,magic numbers,5,made long line more readable  ,104,67,71,14,30,9.0,25.0,110,67,77,14,30,9.0,25.0,6.0,0.0,6.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\goodreads.py,C0301,line-too-long,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,made long lines shorter,7,regular,5,made long lines shorter,78,65,65,14,28,7.0,14.0,81,65,68,14,28,7.0,14.0,3.0,0.0,3.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\akinator.py,C0301,line-too-long,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,made long line shorter,5,"bad names, magic strings",5,made long line shorter,104,79,77,14,28,13.0,19.0,105,79,78,15,30,13.0,19.0,1.0,1.0,1.0,2.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\create_plugin.py,R1703,simplifiable-if-statement,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,replaced in directly returning the condition,6,string building with + instead of formatting,6,less if,169,82,96,46,88,8.0,22.0,165,79,93,46,88,8.0,21.0,-3.0,0.0,-4.0,0.0,-3.0,-1.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-1
jarviscli\plugins\temp_conv.py,R1703,simplifiable-if-statement,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,The return value is the Boolean of the condition so the if can be removed.,7,regular,6,clearer condition,55,34,30,9,16,2.0,10.0,52,31,27,9,16,2.0,9.0,-3.0,0.0,-3.0,0.0,-3.0,-1.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-1
jarviscli\plugins\trivia.py,R1703,simplifiable-if-statement,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,Simplified the code by replacing the if in direct assignment of the condition to the result variable.,7,regular,6,"Replace if with direct assignment of the condition into the output variable, simplifying the code",99,84,82,20,40,5.0,21.0,96,81,79,20,40,4.0,19.0,-3.0,0.0,-3.0,0.0,-3.0,-2.0,-1.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-1
installer\unix_windows.py,R1703,simplifiable-if-statement,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,Replace if with direct assignment of the condition into the output variable.,7,regular,6,"Replace if with direct assignment of the condition into the output variable, simplifying the code",36,21,31,2,4,,,33,18,28,2,4,,,-3.0,0.0,-3.0,0.0,-3.0,,,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\get_host_info.py,C0325,superfluous-parens,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,Removed unneeded parentheses,6,regexs used are not good,5,Removed unneeded parentheses ,86,61,63,24,48,6.0,14.0,86,61,63,24,48,6.0,14.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\open.py,C0325,superfluous-parens,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,Removed unneeded parentheses,7,regular,5,Removed unneeded parentheses ,14,11,11,4,8,2.0,2.0,14,11,11,4,8,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\converted.py,C0325,superfluous-parens,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,Removed unneeded parentheses,7,regular,5,Removed unneeded parentheses,114,63,54,2,4,2.0,11.0,114,63,54,2,4,2.0,11.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
installer\steps\e_launcher.py,C0325,superfluous-parens,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,Removed unneeded parentheses,5,"not structured, many returns, magic numbers",5,Removed unneeded parentheses ,92,65,77,18,34,6.0,6.0,92,65,77,18,34,6.0,6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\memory.py,C0325,superfluous-parens,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,Removed unneeded parentheses,6,"magic numbers, bad variable names",5,Removed unneeded parentheses ,82,61,57,15,29,5.0,16.0,82,61,57,15,29,5.0,16.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\pi.py,C0325,superfluous-parens,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,Removed unneeded parentheses,7,regular,5,Removed unneeded parentheses ,25,18,17,3,6,3.0,3.0,25,18,17,3,6,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\element.py,C0325,superfluous-parens,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,Removed unneeded parentheses,7,regular,5,Removed unneeded parentheses ,129,14,122,9,17,4.0,4.0,129,14,122,9,17,4.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\project_euler.py,C0325,superfluous-parens,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,Removed unneeded parentheses,5,"magic numbers, sting construction with +",5,Removed unneeded parentheses ,143,84,87,28,56,7.0,18.0,143,84,87,28,56,7.0,18.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\buy.py,C0325,superfluous-parens,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,Removed unneeded parentheses,7,regular,5,Removed unneeded parentheses ,74,54,52,14,28,5.0,15.0,74,54,52,14,28,5.0,15.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\speed_conv.py,C0325,superfluous-parens,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,Removed unneeded parentheses,7,regular,5,Removed unneeded parentheses,71,37,43,4,8,3.0,10.0,71,37,43,4,8,3.0,10.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\wordgame.py,C0325,superfluous-parens,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,Removed unneeded parentheses,6,while true and breaks,5,Removed unneeded parentheses ,59,45,45,27,51,12.0,13.0,59,45,45,27,51,12.0,13.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\agify.py,C0325,superfluous-parens,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,Removed unneeded parentheses,7,regular,5,Removed unneeded parentheses ,22,17,16,3,6,3.0,3.0,22,17,16,3,6,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\rockpaperscissors.py,R0916,too-many-boolean-expressions,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes," The condition had many expressions that made it unclear. Instead, there is a dictionary for winning moves, simplifying and clarifying the condition.",5,unstructured code. Magic numbers,7,Clearer and simpler condition.,165,110,109,81,163,15.0,42.0,166,112,110,72,144,15.0,36.0,1.0,-9.0,1.0,-19.0,2.0,-6.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-1
jarviscli\plugins\blackjack.py,R0912,too-many-branches,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes, Function move had 13 branches while Pylint recommends having at most 12. I extracted methods for the long enough user choices to make the code more structured and solve that. ,5,"too complex methods, unused variables",10,clean unrelated small functions,276,241,241,93,178,18.0,49.0,264,226,225,90,173,18.0,52.0,-16.0,-3.0,-12.0,-5.0,-15.0,3.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-3
jarviscli\packages\weather_pinpoint.py,R0912,too-many-branches,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes, Function main had 20 branches while Pylint recommends having at most 12. I extracted methods to make the code more structured and solve that. ,6,one long function,10,"small unrelated functions, reuse one",66,58,64,15,30,17.0,17.0,55,47,49,6,12,5.0,13.0,-15.0,-9.0,-11.0,-18.0,-11.0,-4.0,-12.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-12
jarviscli\plugins\bmr.py,R0912,too-many-branches,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes," Function bmr had 30 branches while Pylint recommends having at most 12. I extracted get_valid_input and used it for gender, height, weight, and age. ",5,duplicated  code,9,"great function extracted, more cleanup is possible.",120,96,104,41,82,30.0,30.0,103,78,85,41,82,18.0,18.0,-19.0,0.0,-17.0,0.0,-18.0,-12.0,-12.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-12
jarviscli\plugins\dictionary.py,R0912,too-many-branches,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes, Function dictionary had 15 branches while Pylint recommends having at most 12. I extracted build_datasets and present_results to make the code more structured and solve that. ,5,used recursion to get input,9,"Extracted small unrelated functions, core still large",86,65,65,17,34,16.0,16.0,93,70,70,17,34,8.0,18.0,5.0,0.0,7.0,0.0,5.0,2.0,-8.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-8
jarviscli\plugins\yeelight.py,R0912,too-many-branches,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes, Function main had 14 branches while Pylint recommends having at most 12. I extracted methods to make the code more structured and solve that. ,5,not structured,10,small unrelated functions,232,153,153,29,57,12.0,68.0,229,160,152,27,53,6.0,70.0,-1.0,-2.0,-3.0,-4.0,7.0,2.0,-6.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-7
jarviscli\plugins\guess_number_game.py,R0912,too-many-branches,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes, Function helloworld had 18 branches while Pylint recommends having at most 12. I extracted methods to make the code more structured and solve that. ,6,"magic numbers, bad variable names",9,"clean unrelated small functions, the main still rather big",116,98,98,57,110,19.0,31.0,102,86,86,43,85,12.0,29.0,-12.0,-14.0,-14.0,-25.0,-12.0,-2.0,-7.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-17
jarviscli\utilities\textParser.py,R0912,too-many-branches,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes, Function parse_date had 26 branches while Pylint recommends having at most 12. I extracted methods handling different types to make the code more structured and solve that. ,5,"not structured, magic numbers",10,"small unrelated functions, covering the so many initial cases",159,119,121,43,84,27.0,41.0,190,146,144,44,86,14.0,50.0,23.0,1.0,31.0,2.0,27.0,9.0,-13.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-16
jarviscli\plugins\weekday.py,R0912,too-many-branches,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes," Function weekday had 14 branches while Pylint recommends having at most 12. Instead, a list is used for day number to name mapping.",4,a if for every day…,10,clear simple implementation,81,52,52,34,68,19.0,20.0,63,40,40,27,54,12.0,13.0,-12.0,-7.0,-18.0,-14.0,-12.0,-7.0,-7.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-7
jarviscli\plugins\stock.py,R0912,too-many-branches,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes, Method __call__ of class Stock had 14 branches while Pylint recommends having at most 12.  Extracted handle_profile_or_fstatement which handles quit similar commands. Also extracted handle_getid.   ,7,regular,10,"clear, simple code, with reuse",164,135,126,59,110,11.0,42.0,165,134,125,58,108,7.0,42.0,-1.0,-1.0,1.0,-2.0,-1.0,0.0,-4.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-4
jarviscli\plugins\food_recipe.py,R0912,too-many-branches,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes, Function getAllRecipes had 13 branches while Pylint recommends having at most 12. I extracted methods to make the code more structured and solve that. ,5,"long function, unstructured, bad names",10,small unrelated functions,157,80,99,7,13,11.0,13.0,139,86,100,7,13,4.0,18.0,1.0,0.0,-18.0,0.0,6.0,5.0,-7.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-8
jarviscli\plugins\expression_checker.py,R0912,too-many-branches,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes," Function expression_checker had 23 branches while Pylint recommends having at most 12. Now there are functions for contains_invalid_characters, check_character_progression, and check_bracket_pairs",4,23 branches,10,"small unrelated functions, covering the so many initial cases",87,83,83,16,32,25.0,25.0,75,62,62,16,29,7.0,7.0,-21.0,0.0,-12.0,-3.0,-21.0,-18.0,-18.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-18
jarviscli\plugins\file_manager.py,R1702,too-many-nested-blocks,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,"Method delete of class file_manage had 6 branches while Pylint recommends having at most 12.  I extracted _confirm_deletion and merged ""self.folder is False and os.path.exists(file)"" to make the code more structured and solve that. ",7,regular,8,The extracted function is ok but very specific,123,76,75,12,22,8.0,29.0,111,75,74,13,24,6.0,30.0,-1.0,1.0,-12.0,2.0,-1.0,1.0,-2.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-2
jarviscli\plugins\flightradar.py,R1702,too-many-nested-blocks,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes, Function flightradar had 6 nested-blocks while Pylint recommends having at most 5. I extracted check_flight_between_destinations to make the code more structured and solve that. ,5,one long function,8,Took care only of the nesting. The extracted function and the rest are still long and complicated.,120,105,106,29,54,41.0,41.0,123,107,108,29,54,23.0,42.0,2.0,0.0,3.0,0.0,2.0,1.0,-18.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-22
jarviscli\plugins\file_organise.py,R1702,too-many-nested-blocks,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes, Method organise of class File_Organise had 6 nested-blocks while Pylint recommends having at most 5. I extracted orgnise_directory to make the code more structured and solve that. ,5,many return points. Magic numbers,9,signature a bit long,125,87,90,27,49,11.0,32.0,128,89,92,27,49,7.0,32.0,2.0,0.0,3.0,0.0,2.0,0.0,-4.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-5
jarviscli\plugins\top_media.py,R0911,too-many-return-statements,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes," Method conv_num of class topmedia had 15 returns while Pylint recommends having at most 6. Instead of the ifs, I look for the index in valid_genres. If not found, None is returned (as done implicitly before)",5,function was bad,10,"simpler, clearer code",128,75,106,36,72,16.0,38.0,101,53,84,24,47,8.0,21.0,-22.0,-12.0,-27.0,-25.0,-22.0,-17.0,-8.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-10
jarviscli\plugins\balut.py,R0911,too-many-return-statements,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes," Method _calc_total_score_points of class Scoresheet had 9 returns while Pylint recommends having at most 6. Instead, score_range maps total score to the result and the function just looks for the suitable range.",3,"500 LOC, unrelated parts",10,"clear, simple code",542,318,376,86,147,10.0,135.0,540,305,373,69,122,7.0,127.0,-3.0,-17.0,-2.0,-25.0,-13.0,-8.0,-3.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-6
jarviscli\plugins\voice_control.py,R0915,too-many-statements,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes," Function hear had 51 statements while Pylint recommends having at most 50. More than that, listen_for_command is repeated and can be reused as a function. activate_voice_mode also handle a single need and better be in a function of its own",4,"repeated code, unstructured",10,"clear, simple code, with reuse",73,65,66,4,8,11.0,11.0,67,58,59,2,4,2.0,2.0,-7.0,-2.0,-6.0,-4.0,-7.0,-9.0,-9.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-9
jarviscli\plugins\hangman.py,R0915,too-many-statements,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,extracted method but the messy part is just extracted into one of them,5,Spaghetti code ,7,extracted method but the messy part is just extracted into one of them,132,115,122,60,119,16.0,31.0,145,122,129,60,119,10.0,35.0,7.0,0.0,13.0,0.0,7.0,4.0,-6.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-14
jarviscli\plugins\write_agenda.py,R0915,too-many-statements,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes," Function write_agenda had 56 statements while Pylint recommends having at most 50. I extracted the methods check_agenda_file, get_valid_date, and get_valid_time to make the code more structured and solve that. ",5,Spaghetti code ,7,less variables going over all the function,114,76,81,6,10,14.0,17.0,128,82,87,6,10,8.0,20.0,6.0,0.0,14.0,0.0,6.0,3.0,-6.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,-6
installer\steps\b_pip.py,W0401,wildcard-import,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes,"Wildcard imports (import *) make it harder to understand what is imported from where. Removing it is also a defensive programming act, lowering the probability of collisions due to future new imports or objects. I imported section and shell directly ",7,regexs used are not good,6,clearer imports,8,6,6,0,0,,,8,6,6,0,0,,,0.0,0.0,0.0,0.0,0.0,,,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
installer\steps\a_setup_virtualenv.py,W0401,wildcard-import,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes," Wildcard imports (import *) make it harder to understand what is imported from where. Removing it is also a defensive programming act,  lowering the probability of collisions due to future new imports or objects.  ",7,regular script,6,clearer imports,47,30,30,7,8,,,48,31,31,7,8,,,1.0,0.0,1.0,0.0,1.0,,,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
installer\steps\c_nltk.py,W0401,wildcard-import,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes," Wildcard imports (import *) make it harder to understand what is imported from where. Removing it is also a defensive programming act,  lowering the probability of collisions due to future new imports or objects.  Imported explicitly section, printlog, shell ",7,regexs used are not good,6,clearer imports,13,9,9,0,0,,,13,9,9,0,0,,,0.0,0.0,0.0,0.0,0.0,,,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
jarviscli\plugins\workout.py,W0401,wildcard-import,1,1,sukeesh/Jarvis,https://github.com/sukeesh/Jarvis/pull/1231,Yes," Wildcard imports (import *) make it harder to understand what is imported from where. Removing it is also a defensive programming act,  lowering the probability of collisions due to future new imports or objects. I imported explicitly notify, NOTIFY_NORMAL",5,"bad names, magic numbers, lookup in ifs",6,clearer imports,158,119,135,103,205,9.0,39.0,158,119,135,103,205,9.0,39.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,sukeesh_Jarvis_interventions_September_29_2024.csv,sukeesh/Jarvis,
