path,msg_id,msg,alerts,chosen,In which repository the modification was done?,In which pull request the modification was done?,Do you consider the removed alert harmful?,Why do you consider it harmful (or harmless)?,"What is the code quality (1 lowest, 10 best)? Code quality refers to the code prior to the pull request.",Why do you consider the code quality as such?,"What is the expected benefit(1 – negative, 5 – neutral, 10 – great)?",Why do you consider the pull request to improve the code (or not improve it)?,LOC_before,LLOC_before,SLOC_before,N1_before,N2_before,McCabe_max_before,McCabe_sum_before,LOC_after,LLOC_after,SLOC_after,N1_after,N2_after,McCabe_max_after,McCabe_sum_after,N2_diff,LLOC_diff,LOC_diff,N1_diff,McCabe_max_diff,SLOC_diff,McCabe_sum_diff,file,repo_name,modified_McCabe_max_diff
src\python_rucaptcha\re_captcha.py,C0301,line-too-long,1,1,AndreiDrang/python-rucaptcha,https://github.com/AndreiDrang/python-rucaptcha/pull/307,No,Made a readable too long line shorter,8,"short and focused, documented, used type hints",5,Made a readable too long line shorter,172,17,23,1,2,2.0,6.0,173,17,24,1,2,2.0,6.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,AndreiDrang_python-rucaptcha_interventions_October_05_2024.csv,AndreiDrang/python-rucaptcha,
src\python_rucaptcha\rotate_captcha.py,C0301,line-too-long,1,1,AndreiDrang/python-rucaptcha,https://github.com/AndreiDrang/python-rucaptcha/pull/307,No,Made a readable too long line shorter,8,"short and focused, documented, used type hints and enum",5,Made a readable too long line shorter,196,30,60,4,6,3.0,11.0,197,30,60,4,6,3.0,11.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,AndreiDrang_python-rucaptcha_interventions_October_05_2024.csv,AndreiDrang/python-rucaptcha,
src\python_rucaptcha\key_captcha.py,C0301,line-too-long,1,1,AndreiDrang/python-rucaptcha,https://github.com/AndreiDrang/python-rucaptcha/pull/307,No,Made a readable too long line shorter,8,"short and focused, documented, used type hints and enum",5,Made a readable too long line shorter,111,17,31,1,2,2.0,6.0,112,17,32,1,2,2.0,6.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,AndreiDrang_python-rucaptcha_interventions_October_05_2024.csv,AndreiDrang/python-rucaptcha,
src\python_rucaptcha\amazon_waf.py,C0301,line-too-long,1,1,AndreiDrang/python-rucaptcha,https://github.com/AndreiDrang/python-rucaptcha/pull/307,No,Made a readable too long line shorter,8,"short and focused, documented, used type hints and enum",5,Made a readable too long line shorter,114,17,29,1,2,2.0,6.0,115,17,30,1,2,2.0,6.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,AndreiDrang_python-rucaptcha_interventions_October_05_2024.csv,AndreiDrang/python-rucaptcha,
src\python_rucaptcha\turnstile.py,C0301,line-too-long,1,1,AndreiDrang/python-rucaptcha,https://github.com/AndreiDrang/python-rucaptcha/pull/307,No,Made a readable too long line shorter,8,"short and focused, documented, used type hints and enum",5,Made a readable too long line shorter,111,17,23,1,2,2.0,6.0,112,17,24,1,2,2.0,6.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,AndreiDrang_python-rucaptcha_interventions_October_05_2024.csv,AndreiDrang/python-rucaptcha,
docs\conf.py,C0301,line-too-long,1,1,AndreiDrang/python-rucaptcha,https://github.com/AndreiDrang/python-rucaptcha/pull/307,No,Made a readable too long line shorter,8,"short and focused, documented, used type hints and enum",6,Structure is slightly more readable now,108,47,90,0,0,,,110,47,92,2,4,,,4.0,0.0,2.0,2.0,,2.0,,AndreiDrang_python-rucaptcha_interventions_October_05_2024.csv,AndreiDrang/python-rucaptcha,
docs\conf.py,C0301,line-too-long,1,1,AndreiDrang/python-rucaptcha,https://github.com/AndreiDrang/python-rucaptcha/pull/307,No,Made a readable too long line shorter,8,"short and focused, documented, used type hints and enum",6,Structure is slightly more readable now,108,47,90,0,0,,,110,47,92,2,4,,,4.0,0.0,2.0,2.0,,2.0,,AndreiDrang_python-rucaptcha_interventions_October_05_2024.csv,AndreiDrang/python-rucaptcha,
filter.py,R1703,simplifiable-if-statement,1,1,Hipo/university-domains-list,https://github.com/Hipo/university-domains-list/pull/667,Yes,"Instead of just returning a Boolean expression, it was wrapped by an if, returning True if True and False if False  ",5,"Not clean, bad variables names",6,"Lower complexity, easier to understand that the if is not indeed needed",80,46,43,13,24,7.0,13.0,76,43,40,13,24,7.0,13.0,0.0,-3.0,-4.0,0.0,0.0,-3.0,0.0,Hipo_university-domains-list_interventions_September_29_2024.csv,Hipo/university-domains-list,
bin\litscan-retracted-articles.py,W0718,broad-exception-caught,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,"As discussed, narrowed Exception to ValueError",7,regular,6,narrowed exception,88,51,45,10,20,13.0,13.0,88,51,45,10,20,13.0,13.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\databases\hgnc\helpers.py,W0718,broad-exception-caught,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes," Catching Exception might hide unexpected exceptions (e.g., due to new code that will be added).More than that, the exception handling does not log it but returns None, making it harder to detect.I changed it to catching  requests.exceptions.HTTPErrorSeehttps://stackoverflow.com/questions/24518944/try-except-when-using-python-requests-module",5,"multiple returns, magic strings",6,narrowed un-logged exception,180,94,135,38,76,13.0,30.0,180,94,135,38,76,13.0,30.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\rnacentral\r2dt\parser.py,W0718,broad-exception-caught,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes," Catching Exception might hide unexpected exceptions (e.g., due to new code that will be added).  The method parse calls R2DTResultInfo.validate (in line 96).Validate is a sequence of assertions, hence the specific AssertionError can be used instead.  See https://stackoverflow.com/questions/1569049/making-pythons-assert-throw-an-exception-that-i-choose",6,magic strings,6,narrowed logged exception,108,70,79,21,40,9.0,19.0,108,70,79,21,40,9.0,19.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\rnacentral\genome_mapping\igv.py,W0718,broad-exception-caught,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes," Catching Exception might hide unexpected exceptions (e.g., due to new code that will be added).   The function ftp calls ftplib.FTP's quit (in line 40).The specific ftplib.all_errors   can be used instead.   See https://docs.python.org/3/library/ftplib.html",6,string construction with +,6,narrowed logged exception,84,50,50,52,105,23.0,28.0,84,50,50,52,105,23.0,28.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\databases\europepmc\stream.py,W0718,broad-exception-caught,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,"The function fallback calls fetch.lookup (in line 41). I changed to (fetch.UnknownReference, fetch.TooManyPublications) as discussed. Please note that I could not find where TooManyPublications is defined",7,regular,6,narrowed un-logged exception,81,46,53,5,8,9.0,19.0,81,46,53,5,8,9.0,19.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
bin\litscan-create-xml-metadata.py,C0301,line-too-long,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,Made a readable line shorter.,7,regular,5,Made a readable line shorter.,110,59,64,8,16,5.0,7.0,111,59,65,8,16,5.0,7.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\utils.py,C0301,line-too-long,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,Made a readable line shorter,7,regular,5,Made a readable line shorter,55,30,29,0,0,3.0,12.0,56,30,29,0,0,3.0,12.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\databases\evlncrnas\lookup.py,C0301,line-too-long,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,Made unreadable commented out line shorter.,6,bad variable names,6,Made an unreadable line readable,152,37,92,1,2,2.0,4.0,153,37,92,1,2,2.0,4.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\databases\evlncrnas\parser.py,C0301,line-too-long,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,Made a readable line shorter,6,many magic strings,5,Made a readable line shorter,348,160,247,10,19,5.0,14.0,349,160,247,10,19,5.0,14.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\databases\mgnify\prepare.py,C0301,line-too-long,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,Made a readable line shorter,7,regular,5,Made a readable line shorter,80,37,47,4,8,6.0,8.0,81,37,48,4,8,6.0,8.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\databases\plncdb\parser.py,C0301,line-too-long,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,Made a readable line shorter,6,some dead code (parameters in a call),5,Made a readable line shorter,162,64,94,12,24,6.0,19.0,163,64,95,12,24,6.0,19.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
bin\litscan-get-statistics.py,C0301,line-too-long,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,Made a readable line shorter,5,"Instead of using few columns in a single query, uses different queries",5,Made a readable line shorter,64,30,28,2,4,1.0,1.0,65,30,29,2,4,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\cli\ensembl.py,C0301,line-too-long,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,Made a readable line shorter,7,regular,5,Made a readable line shorter,181,99,112,6,11,3.0,14.0,183,99,114,8,15,3.0,14.0,4.0,0.0,2.0,2.0,0.0,2.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\databases\tmrna\helpers.py,C0301,line-too-long,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,Made a readable line shorter,7,regular,5,Made a readable line shorter,64,50,53,5,10,6.0,18.0,65,50,54,6,12,6.0,18.0,2.0,0.0,1.0,1.0,0.0,1.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\rnacentral\precompute\utils.py,C0301,line-too-long,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,Made a readable line shorter,7,regular,5,Made a readable line shorter,177,72,67,22,41,7.0,28.0,178,72,67,22,41,7.0,28.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\rnacentral\search_export\compare.py,C0301,line-too-long,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,Made a readable line shorter,5,"variables data1 ad data2, magic numbers",5,Made a readable line shorter,88,48,56,9,18,7.0,12.0,89,48,57,10,20,7.0,12.0,2.0,0.0,1.0,1.0,0.0,1.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
rnacentral_pipeline\databases\psi_mi\tab.py,W0107,unnecessary-pass,1,1,RNAcentral/rnacentral-import-pipeline,https://github.com/RNAcentral/rnacentral-import-pipeline/pull/208,Yes,unneeded pass in the end of exception handling,6,"too many returns hurts structure, though in short functions",6,Cleaned a left over,202,103,143,24,44,5.0,40.0,201,102,142,24,44,5.0,40.0,0.0,-1.0,-1.0,0.0,0.0,-1.0,0.0,RNAcentral_rnacentral-import-pipeline_interventions_October_05_2024.csv,RNAcentral/rnacentral-import-pipeline,
plugins\create_package.py,W0718,broad-exception-caught,1,1,SublimeText/PackageDev,https://github.com/SublimeText/PackageDev/pull/402,Yes," The function _create_package uses os.mkdir and catch exception. This is too wide since mkdir catches specific exception. That might catch and hide new exception (e.g., in case that more code will be added to the try section).  For the mkdir exceptions see: https://docs.python.org/3/library/os.html#os.mkdir",6,some function in the file with the main class,6,No exceptions hiding yet probably no new exceptions will be generated here,81,52,60,5,7,6.0,21.0,83,54,62,5,7,6.0,22.0,0.0,2.0,2.0,0.0,0.0,2.0,1.0,SublimeText_PackageDev_interventions_October_05_2024.csv,SublimeText/PackageDev,1
plugins\new_resource_file\__init__.py,C0325,superfluous-parens,1,1,SublimeText/PackageDev,https://github.com/SublimeText/PackageDev/pull/402,Yes,Removed unneeded parentheses in return statement ,7,regular,5,change to small to have impact,119,81,75,11,21,5.0,31.0,119,81,75,11,21,5.0,31.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,SublimeText_PackageDev_interventions_October_05_2024.csv,SublimeText/PackageDev,
plugins\command_completions\__init__.py,C0325,superfluous-parens,1,1,SublimeText/PackageDev,https://github.com/SublimeText/PackageDev/pull/402,Yes," Removed unneeded parenthesis in python_arg_scope = (""source.python meta.function-call.arguments.python string.quoted"")  I suspected that the other might intended to create a tuple. To create a single element tuple you need a comma at the end like python_arg_scope = (""source.python meta.function-call.arguments.python string.quoted"",) So python_arg_scope was a string anyway  Also in line 262, in quite a similar code, there are no parenthesis. ",7,regular,5,change to small to have impact,286,146,221,30,49,8.0,61.0,286,146,221,30,49,8.0,61.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,SublimeText_PackageDev_interventions_October_05_2024.csv,SublimeText/PackageDev,
plugins\syntax_dev\completions.py,R0911,too-many-return-statements,1,1,SublimeText/PackageDev,https://github.com/SublimeText/PackageDev/pull/402,Yes, Function match_selector had 7 return statements while pylint recommends to have at most 6. I assigned the return values into the result variable and use a single statement returning in the end of the function. ,5,"400+ LOC, many returns and distracted flow",7,Code is clearer ,439,174,352,42,71,9.0,64.0,444,177,355,42,71,9.0,64.0,0.0,3.0,5.0,0.0,0.0,3.0,0.0,SublimeText_PackageDev_interventions_October_05_2024.csv,SublimeText/PackageDev,
plugins\lib\fileconv\loaders.py,W0107,unnecessary-pass,1,1,SublimeText/PackageDev,https://github.com/SublimeText/PackageDev/pull/402,Yes, The method parse of LoaderProto should be overridden by subclasses (as discussed with FichteFoll). Instead of leaving with just pass changed to raise NotImplementedError to verify that they are not mistakenly used. ,5,"400+ LOC, more than one class",6,defensive programming against future accidental usage,428,197,208,55,104,10.0,88.0,429,197,208,55,104,10.0,88.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,SublimeText_PackageDev_interventions_October_05_2024.csv,SublimeText/PackageDev,
cappuccino\lastfm.py,R0911,too-many-return-statements,1,1,TheReverend403/cappuccino,https://github.com/TheReverend403/cappuccino/pull/23,Yes, Method now_playing of class LastFM had 8 returns while Pylint recommends having at most 6. The return value is assigned into the variable response that is returned at the end.,6,a bit complex,7,response variable instead of return,129,67,86,8,13,11.0,24.0,132,74,93,8,13,12.0,26.0,0.0,7.0,3.0,0.0,1.0,7.0,2.0,TheReverend403_ricedb_interventions_October_04_2024.csv,TheReverend403/cappuccino,1
cappuccino\triggers.py,R0911,too-many-return-statements,1,1,TheReverend403/cappuccino,https://github.com/TheReverend403/cappuccino/pull/23,Yes,"  Method trigger of class Triggers had 7 returns while Pylint recommends having at most 6.  Now, in the last returns, the return value is assigned into the variable response that is returned at the end. ",7,regular,7,response variable instead of return,133,63,93,17,31,10.0,28.0,134,65,95,17,31,10.0,28.0,0.0,2.0,1.0,0.0,0.0,2.0,0.0,TheReverend403_ricedb_interventions_October_04_2024.csv,TheReverend403/cappuccino,
cappuccino\rice.py,R0911,too-many-return-statements,1,1,TheReverend403/cappuccino,https://github.com/TheReverend403/cappuccino/pull/23,Yes," Method _generic_db of class Rice had 19 returns while Pylint recommends having at most 6.  Now, in the last returns, the return value is assigned into the variable response that is returned at the end. ",5,"too complex (e.g., branches too)",7,response variable instead of return,246,150,152,26,50,39.0,57.0,241,162,164,27,51,42.0,60.0,1.0,12.0,-5.0,1.0,3.0,12.0,3.0,TheReverend403_ricedb_interventions_October_04_2024.csv,TheReverend403/cappuccino,3
cappuccino\urlinfo.py,R0915,too-many-statements,1,1,TheReverend403/cappuccino,https://github.com/TheReverend403/cappuccino/pull/23,Yes," Method _process_url of class UrlInfo had 58 statements while Pylint recommends having at most 50. Now there are dedicated methods _validate_ip_address, _validate_content_type, _extract_title_and_size, _extract_title_from_soup, and _extract_site_name_from_soup ",7,regular,10,"clean methods covering logic, some might be reusable",269,183,204,43,82,29.0,82.0,267,186,203,38,72,23.0,74.0,-10.0,3.0,-2.0,-5.0,-6.0,-1.0,-8.0,TheReverend403_ricedb_interventions_October_04_2024.csv,TheReverend403/cappuccino,-22
src\iembot\util.py,W0104,pointless-statement,1,1,akrherz/iembot,https://github.com/akrherz/iembot/pull/99,Yes,"In the function toot_cb, line 506 there is the seems to be pointless statement mduser[""screen_name""]. Accessing a key might be a way to cause an expectation if the key does not exist but there is no exception handling here. mduser is created a few lines above and is not used later or returned.",4,"800+ LOC, low cohesion of utils, tendency to returns",6,pointless statement is removed. Could lead to confusion.,875,511,641,82,155,13.0,116.0,874,510,640,82,155,13.0,116.0,0.0,-1.0,-1.0,0.0,0.0,-1.0,0.0,akrherz_iembot_interventions_October_04_2024.csv,akrherz/iembot,
src\iembot\iemchatbot.py,R0912,too-many-branches,1,1,akrherz/iembot,https://github.com/akrherz/iembot/pull/99,Yes,"Method processMessagePC of class JabberClient had 19 branches while Pylint recommends having no more than 12.I extracted some methods, fixing also too-many-statements, and making the code more structured and readable. ",7,regular,9,extracted unrelated methods,236,136,169,36,71,24.0,60.0,259,147,180,38,74,15.0,53.0,3.0,11.0,23.0,2.0,-9.0,11.0,-7.0,akrherz_iembot_interventions_October_04_2024.csv,akrherz/iembot,-16
src\iembot\basicbot.py,R0912,too-many-branches,1,1,akrherz/iembot,https://github.com/akrherz/iembot/pull/99,Yes,"Method process_groupchat_cmd of class basicbot had 17 branches while Pyline recommends having at most 12.The method handles different commands.I extracted three methods handling specific commands, fixing the alert.This change also reduces the method length and makes it more structured and readable. ",5,"700+ LOC, low cohesion of utils, tendency to returns",8,extracted unrelated methods but with too many parameters,756,426,534,53,100,13.0,92.0,765,432,540,53,100,8.0,95.0,0.0,6.0,9.0,0.0,-5.0,6.0,3.0,akrherz_iembot_interventions_October_04_2024.csv,akrherz/iembot,-6
docs\conf.py,C0301,line-too-long,1,1,alchemistry/alchemlyb,https://github.com/alchemistry/alchemlyb/pull/424,Yes," Made line shorter, its end wasn't readable ",6,imports spread in file instead of the beginning,6,end of line wasn’t readable,189,29,66,1,2,,,190,29,67,2,4,,,2.0,0.0,1.0,1.0,,1.0,,alchemistry_alchemlyb_interventions_October_05_2024.csv,alchemistry/alchemlyb,
docs\conf.py,C0301,line-too-long,1,1,alchemistry/alchemlyb,https://github.com/alchemistry/alchemlyb/pull/424,Yes," Made line shorter, its end wasn't readable ",6,imports spread in file instead of the beginning,6,end of line wasn’t readable,189,29,66,1,2,,,190,29,67,2,4,,,2.0,0.0,1.0,1.0,,1.0,,alchemistry_alchemlyb_interventions_October_05_2024.csv,alchemistry/alchemlyb,
src\alchemlyb\parsing\util.py,C0301,line-too-long,1,1,alchemistry/alchemlyb,https://github.com/alchemistry/alchemlyb/pull/424,No,Made a readable line shorter,7,ok,5,shorter readable line,97,35,35,14,28,12.0,16.0,98,35,36,15,30,12.0,16.0,2.0,0.0,1.0,1.0,0.0,1.0,0.0,alchemistry_alchemlyb_interventions_October_05_2024.csv,alchemistry/alchemlyb,
src\pygubu\plugins\ttkwidgets\utils.py,W0718,broad-exception-caught,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," Catching Exception might hide unexpected exceptions (e.g., due to new code that will be added).   The method _code_process_property_value of the class  AutocompleteBaseBO calls cvalues = f""{value.split()}"" (in line 29).Split does not raise exceptions.https://docs.python.org/3.3/library/stdtypes.htmlThe handling is just pass, which increase the risk of missing unexpected exceptions, If value is None then AttributeError will be raised.",7,regular,6,Alert on using pass by mistake.,85,56,65,7,14,4.0,22.0,85,56,65,7,14,4.0,22.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,
src\pygubu\plugins\tkcalendar\basecalendar.py,C0301,line-too-long,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes,Made a readable line shorter,7,mainly configuration,5,Made a readable line shorter,183,26,177,6,12,5.0,13.0,184,26,178,7,14,5.0,13.0,2.0,0.0,1.0,1.0,0.0,1.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,
src\pygubu\plugins\tkmt\designer\properties.py,C0301,line-too-long,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes,Made a readable line shorter,7,mainly configuration,5,Made a readable line shorter,175,13,172,0,0,,,176,13,173,1,2,,,2.0,0.0,1.0,1.0,,1.0,,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,
src\pygubu\plugins\ttk\ttkstdwidgets.py,C0301,line-too-long,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes,Made a readable line shorter,4,700+ LOC,5,Made a readable line shorter,775,360,624,56,111,9.0,91.0,776,360,625,57,113,9.0,91.0,2.0,0.0,1.0,1.0,0.0,1.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,
src\pygubu\plugins\ttkwidgets\itemscanvas.py,C0301,line-too-long,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes,Made a readable line shorter,7,mainly configuration,5,Made a readable line shorter,102,34,94,6,12,4.0,10.0,103,34,95,7,14,4.0,10.0,2.0,0.0,1.0,1.0,0.0,1.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,
src\pygubu\plugins\ttkwidgets\table.py,C0301,line-too-long,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes,Made an unreadable line shorter,7,regular,6,Made an unreadable line shorter,106,44,89,8,16,5.0,14.0,107,44,90,9,18,5.0,14.0,2.0,0.0,1.0,1.0,0.0,1.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,
src\pygubu\plugins\pygubu\designer\properties.py,C0301,line-too-long,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes,Made a readable line shorter,7,mainly configuration,5,Made a readable line shorter,287,50,282,0,0,,,288,50,283,1,2,,,2.0,0.0,1.0,1.0,,1.0,,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,
src\pygubu\plugins\tkintertable\__init__.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," ""spec is not None"" is already Boolean. Removing the surrounding if statement simplifies the statement.",6,magic strings,6,statement is a bit simpler,58,27,36,1,2,3.0,11.0,58,27,36,1,2,3.0,10.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\plugins\tksheet\__init__.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," ""spec is not None"" is already Boolean. Removing the surrounding if statement simplifies the statement.",7,"small class, magic string",6,statement is a bit simpler,24,16,16,1,2,2.0,7.0,24,16,16,1,2,2.0,6.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\plugins\awesometkinter\__init__.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," ""spec is not None"" is already Boolean. Removing the surrounding if statement simplifies the statement.",6,"multiple returns, import in function",6,statement is a bit simpler,58,25,46,2,4,3.0,12.0,58,25,46,2,4,3.0,10.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\widgets\dockfw\dockframe.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," ""tpane == self._main_pane"" is already Boolean. Removing the surrounding if statement simplifies the statement.",5,"400+ LOC, high nesting",6,statement is a bit simpler,405,294,325,40,76,9.0,95.0,405,294,325,40,76,9.0,94.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\plugins\tkmt\__init__.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," ""spec is not None"" is already Boolean. Removing the surrounding if statement simplifies the statement.",6,"multiple returns, import in function",6,statement is a bit simpler,38,27,27,3,6,3.0,14.0,38,27,27,3,6,3.0,13.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\plugins\tkcalendar\__init__.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," ""spec is not None"" is already Boolean. Removing the surrounding if statement simplifies the statement.",7,multiple returns,6,statement is a bit simpler,30,20,22,2,4,3.0,11.0,30,20,22,2,4,3.0,10.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\plugins\tkintermapview\__init__.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," ""spec is not None"" is already Boolean. Removing the surrounding if statement simplifies the statement.",7,"small class, magic string",6,statement is a bit simpler,59,29,37,1,2,3.0,11.0,59,29,37,1,2,3.0,10.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\plugins\customtkinter\__init__.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," ""spec is not None"" is already Boolean. Removing the surrounding if statement simplifies the statement.",6,"multiple returns, import in function",6,statement is a bit simpler,56,24,45,2,4,3.0,12.0,56,24,45,2,4,3.0,10.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\plugins\tkinterweb\__init__.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," ""spec is not None"" is already Boolean. Removing the surrounding if statement simplifies the statement.",6,"multiple returns, import in function",6,statement is a bit simpler,44,24,31,2,4,3.0,12.0,44,24,31,2,4,3.0,10.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\theming\bootstrap\builder.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes,"Using bool, the dedicated function to convert None to False, others into Boolean in the regular mapping",3,2700+ LOC,6,statement is a bit simpler,2783,984,2402,112,186,7.0,182.0,2783,984,2402,112,186,7.0,182.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,
src\pygubu\component\builderobject.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes,"Using bool, the dedicated function to convert None to False, others into Boolean in the regular mapping",4,"1,000+ LOC",6,statement is a bit simpler,1056,745,847,128,255,17.0,273.0,1056,745,847,128,255,17.0,272.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\plugins\ttkwidgets\__init__.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," ""spec is not None"" is already Boolean. Removing the surrounding if statement simplifies the statement.",7,multiple returns,6,statement is a bit simpler,62,20,55,2,4,3.0,11.0,62,20,55,2,4,3.0,10.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\plugins\tk\tkstdwidgets.py,R1719,simplifiable-if-expression,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes,"""master.type(0) == ""tearoff"""" is already Boolean. Removing the surrounding if statement simplifies the statement. ",4,"1,000+ LOC",6,statement is a bit simpler,1523,518,1300,76,152,12.0,142.0,1523,518,1300,76,152,12.0,141.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-1
src\pygubu\widgets\dockfw\framework.py,R0912,too-many-branches,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," The class method drag_motion of class DockingFramework had 17 branches, while Pylint recommends not to have more than 12.  The method was structured so I extracted two methods for handling indicator and cursor moving.",7,regular,7,some code is encapsulated,251,174,213,47,94,26.0,80.0,260,181,220,47,94,19.0,80.0,0.0,7.0,9.0,0.0,-7.0,7.0,0.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-7
src\pygubu\builder.py,R0912,too-many-branches,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," The class method _import_class of class Builder had 13 branches, while Pylint recommends not to have more than 12. The method was structured so I extracted a method for handling load problems.",4,"~400 LOC, unstructured code",7,some code is encapsulated,393,274,280,39,66,15.0,90.0,396,276,282,39,66,13.0,91.0,0.0,2.0,3.0,0.0,-2.0,2.0,1.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-2
src\pygubu\widgets\calendarframe.py,R0912,too-many-branches,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes," The method configure of class CalanderFrame had 14 branches while Pylint recommends not to have more than 12.  The methods were structured so I extracted methods for handling state, locale, and firstweekday..",4,"500+ LOC, magic numbers",9,"small unrelated methods, few parameters",564,349,454,79,154,17.0,86.0,577,358,463,79,154,11.0,89.0,0.0,9.0,13.0,0.0,-6.0,9.0,3.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-6
src\pygubu\component\uidefinition.py,R1702,too-many-nested-blocks,1,1,alejandroautalan/pygubu,https://github.com/alejandroautalan/pygubu/pull/299,Yes, Method __load_layout_v1_0 of class UIDefinition had 7 nested blocks while Pylint recommends not to have more than 5.I extracted the method _handle_child_layouts fixing this alert and too-many-branches too.,4,500+ LOC,8,"small unrelated method, few parameters, some are modified",582,437,461,71,133,13.0,135.0,586,440,464,71,133,13.0,136.0,0.0,3.0,4.0,0.0,0.0,3.0,1.0,alejandroautalan_pygubu_interventions_October_06_2024.csv,alejandroautalan/pygubu,-6
bioconda_utils\cli.py,R1703,simplifiable-if-statement,1,1,bioconda/bioconda-utils,https://github.com/bioconda/bioconda-utils/pull/1022,Yes," The function build checks the value of ""pkg_dir is None"" in a if statement and assigns it to the variable use_host_conda_bld (line 469).I assigned the expression directly to the variable, removing the unneeded if and simplifying the code.",3,"1,100 LOC",7,"Simpler code, avoids confusion or amusement ",1129,596,897,114,199,35.0,156.0,1126,593,894,114,199,35.0,155.0,0.0,-3.0,-3.0,0.0,0.0,-3.0,-1.0,bioconda_bioconda-utils_interventions_September_27_2024.csv,bioconda/bioconda-utils,-1
bioconda_utils\artifacts.py,C0325,superfluous-parens,1,1,bioconda/bioconda-utils,https://github.com/bioconda/bioconda-utils/pull/1022,Yes,Removed unnecessary parenthesis,7,regular,5,Removed unnecessary parenthesis,244,175,184,25,45,19.0,50.0,244,175,184,25,45,19.0,50.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,bioconda_bioconda-utils_interventions_September_27_2024.csv,bioconda/bioconda-utils,
bioconda_utils\bioconductor_skeleton.py,C0325,superfluous-parens,1,1,bioconda/bioconda-utils,https://github.com/bioconda/bioconda-utils/pull/1022,Yes,Removed unnecessary parenthesis,3,"1,300 LOC",5,Removed unnecessary parenthesis,1317,559,776,106,195,32.0,185.0,1317,559,776,106,195,32.0,185.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,bioconda_bioconda-utils_interventions_September_27_2024.csv,bioconda/bioconda-utils,
bioconda_utils\update_pinnings.py,R0912,too-many-branches,1,1,bioconda/bioconda-utils,https://github.com/bioconda/bioconda-utils/pull/1022,Yes," The function ""check"" had 14 branches , while Pylint recommends having no more than 12. I extracted a method to handle the metas.",7,regular,7,code is somewhat more structured,363,145,195,25,46,16.0,40.0,367,148,198,25,46,10.0,41.0,0.0,3.0,4.0,0.0,-6.0,3.0,1.0,bioconda_bioconda-utils_interventions_September_27_2024.csv,bioconda/bioconda-utils,-6
bioconda_utils\utils.py,R0912,too-many-branches,1,1,bioconda/bioconda-utils,https://github.com/bioconda/bioconda-utils/pull/1022,Yes," The function  run had 13 branches and, while Pylint recommends having no more than 12.  I extracted _handle_process to reduce the complexity. ",3,1600 LOC,7,code is somewhat more structured,1656,841,950,138,256,17.0,299.0,1660,844,953,138,256,13.0,300.0,0.0,3.0,4.0,0.0,-4.0,3.0,1.0,bioconda_bioconda-utils_interventions_September_27_2024.csv,bioconda/bioconda-utils,-4
bioconda_utils\autobump.py,R0912,too-many-branches,1,1,bioconda/bioconda-utils,https://github.com/bioconda/bioconda-utils/pull/1022,Yes," The method apply of the class CreatePullRequest  had 14 branches and, while Pylint recommends having no more than 12.  I extracted _handle_open_PRs to reduce the complexity.",3,"1,200 LOC",8,extracted a significant logic. Extraction hints of assignment to unused variables.,1227,745,743,105,179,22.0,318.0,1231,748,746,105,179,22.0,318.0,0.0,3.0,4.0,0.0,0.0,3.0,0.0,bioconda_bioconda-utils_interventions_September_27_2024.csv,bioconda/bioconda-utils,-8
bioconda_utils\githandler.py,W0107,unnecessary-pass,1,1,bioconda/bioconda-utils,https://github.com/bioconda/bioconda-utils/pull/1022,Yes,Removed unnecessary pass,4,600 LOC,6,Removed unnecessary pass,667,407,402,60,103,13.0,138.0,666,406,401,60,103,13.0,138.0,0.0,-1.0,-1.0,0.0,0.0,-1.0,0.0,bioconda_bioconda-utils_interventions_September_27_2024.csv,bioconda/bioconda-utils,
redir_gen\redirgen.py,C0301,line-too-long,1,1,bl4de/security-tools,https://github.com/bl4de/security-tools/pull/34,Yes,Made a readable line shorter,7,regular script,5,Made a readable line shorter,54,32,34,0,0,2.0,4.0,56,32,36,0,0,2.0,4.0,0.0,0.0,2.0,0.0,0.0,2.0,0.0,bl4de_security-tools_interventions_October_04_2024.csv,bl4de/security-tools,
ip_generator.py,C0301,line-too-long,1,1,bl4de/security-tools,https://github.com/bl4de/security-tools/pull/34,Yes,Made a readable line shorter,6,magic numbers,5,Made a readable line shorter,47,23,30,6,12,6.0,7.0,48,23,31,6,12,6.0,7.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,bl4de_security-tools_interventions_October_04_2024.csv,bl4de/security-tools,
hasher.py,C0325,superfluous-parens,1,1,bl4de/security-tools,https://github.com/bl4de/security-tools/pull/34,Yes,Removed unneeded parenthesis in if,7,regular script,6,a bit less complex,68,37,46,3,6,4.0,7.0,68,37,46,3,6,4.0,7.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,bl4de_security-tools_interventions_October_04_2024.csv,bl4de/security-tools,
virustotal.py,C0325,superfluous-parens,1,1,bl4de/security-tools,https://github.com/bl4de/security-tools/pull/34,Yes,Removed unneeded parenthesis in if,6,"hard coded urls, magic numbers",6,a bit less complex,71,46,49,5,10,5.0,8.0,71,46,49,5,10,5.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,bl4de_security-tools_interventions_October_04_2024.csv,bl4de/security-tools,
hexview\hexview.py,R0916,too-many-boolean-expressions,1,1,bl4de/security-tools,https://github.com/bl4de/security-tools/pull/34,Yes," If had 6 terms, it is recommended not to have more than 5. I extracted the logic of checking two variable, making the logic more structured.",5,"400+ LOC, magic numbers, unclear variables names",6,logic is a bit more structured,442,160,367,82,164,9.0,30.0,444,162,369,84,166,9.0,30.0,2.0,2.0,2.0,2.0,0.0,2.0,0.0,bl4de_security-tools_interventions_October_04_2024.csv,bl4de/security-tools,
diggit\diggit.py,W0107,unnecessary-pass,1,1,bl4de/security-tools,https://github.com/bl4de/security-tools/pull/34,Yes," print_banner comment says that it should print the credits but it implementation is just pass. I removed the function and the single call to it, giving the same credit in less code.",7,regular script,6,removed a function implemented as pass,137,74,94,49,98,9.0,16.0,130,70,91,49,98,9.0,15.0,0.0,-4.0,-7.0,0.0,0.0,-3.0,-1.0,bl4de_security-tools_interventions_October_04_2024.csv,bl4de/security-tools,
src\rinoh\table.py,C0325,superfluous-parens,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes,remove unneeded parenthesis ,6,"long file, many classes",6,removed unneeded parenthesis,656,455,492,121,240,36.0,265.0,656,455,492,121,240,36.0,265.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,
src\rinoh\font\type1.py,R0912,too-many-branches,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes, The constructor of AdobeFontMetricsParser had 14 branches. I extracted _process_line with the content of the loop going over lines.,7,rather regular,6,extracted method coupled with its caller,347,257,290,47,83,17.0,119.0,350,259,292,47,83,13.0,115.0,0.0,2.0,3.0,0.0,-4.0,2.0,-4.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,-6
src\rinoh\font\opentype\required.py,R0912,too-many-branches,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes," The constructors, that handles many format values, had too many branches. I extracting handling format 4 into a dedicated method.",6,magic numbers,8,"clearer code, yet related to original method",443,203,368,43,86,20.0,95.0,447,206,371,43,86,13.0,87.0,0.0,3.0,4.0,0.0,-7.0,3.0,-8.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,-7
src\rinoh\reference.py,R0912,too-many-branches,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes," Method children had many branches computing the text variable. I extracted those base on the type value into _handle_type and replaces these branches with a single one, checking if the type is relevant.",6,unclear type magic numbers,6,there is still coupling due to dependency in type values,469,316,343,38,75,12.0,146.0,476,320,348,39,77,11.0,147.0,2.0,4.0,7.0,1.0,-1.0,5.0,1.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,-4
src\rinoh\attribute.py,R0912,too-many-branches,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes, Method __new__ of the class WithAttributes had too many branches. I extracted a static method _handle_bases handing base classes logic.,6,"rather long file, with a few classes",7,"clearer code, too many parameter in extracted method, some are modified",614,457,471,60,112,16.0,223.0,618,460,474,60,112,11.0,223.0,0.0,3.0,4.0,0.0,-5.0,3.0,0.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,-5
src\rinoh\backend\pdf\filter.py,R0912,too-many-branches,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes, Function run_length_encoder had 14 branches (limit is 12). Extracted the _handle_byte function,6,"long file, magic numbers, unrelated code",6,extracted method coupled with its caller,473,353,353,80,151,14.0,191.0,477,356,356,80,151,11.0,184.0,0.0,3.0,4.0,0.0,-3.0,3.0,-7.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,-7
src\rinoh\flowable.py,R0912,too-many-branches,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes, Method render of class LabeledFlowable had 14 branches. Extracted the method _compute_spillover to structure and reduce branches,6,"1000+ LOC, few classes",5,extracted method coupled with its caller,902,577,641,110,205,21.0,239.0,909,580,647,110,205,21.0,240.0,0.0,3.0,7.0,0.0,0.0,6.0,1.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,-4
src\rinoh\style.py,R1702,too-many-nested-blocks,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes," The method write_log had 6 nesting levels, while the recommendation is at most 5. I extracted two nested methods,  _log_entries and in it _handle_source. The methods extraction also fixed too-many-branches and too-many-statements in that method.",5,"1,000+ LOC",9,"Less complex code – nesting, branches, and statements",1138,782,813,128,241,26.0,365.0,1148,787,818,128,241,16.0,365.0,0.0,5.0,10.0,0.0,-10.0,5.0,0.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,-20
src\rinoh\paragraph.py,R1702,too-many-nested-blocks,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes, Method _spans_to_words of class ParagraphState had 7 nesting levels. I extracted _process_groups that goes over the groups to reduce that.,4,"method is a mess with many variables and parts interacting with each other. This is in a 1,000+ LOC file",6,code is a bit better but the extracted method has many parameters due to the interactions.,1285,863,934,138,256,27.0,364.0,1298,866,946,138,256,22.0,364.0,0.0,3.0,13.0,0.0,-5.0,12.0,0.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,-15
src\rinoh\backend\pdf\reader.py,R1702,too-many-nested-blocks,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes, Method read_dictionary_or_stream of class PDFObjectReader had 6 nesting levels. I extracted _handle_filter that takes only the dictionary as a parameter and encapsulates the creation of the stream_filter.,6,"long file, some magic strings",9,extraction is clean. Method gets one parameter. Also fixes too-many-branches,553,466,470,109,207,17.0,180.0,557,469,473,109,207,15.0,181.0,0.0,3.0,4.0,0.0,-2.0,3.0,1.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,-8
src\rinoh\backend\pdf\xobject\purepng.py,R0911,too-many-return-statements,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes," Function check_time had 7 returns I kept the return value and return it in the end of the function, avoiding too many point of exit. Other than the return there is also an exception in case the the type is not supported.",5,3000+ LOC,6,less return yet still many cases,3060,1640,1640,627,1203,34.0,573.0,3063,1643,1643,627,1203,34.0,573.0,0.0,3.0,3.0,0.0,0.0,3.0,0.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,
src\rinoh\__main__.py,R0915,too-many-statements,1,1,brechtm/rinohtype,https://github.com/brechtm/rinohtype/pull/439,Yes, The function main had 116 statements (more than the recommended limit of 50). Most code handle different unrelated args so I extracted methods for them.,6,rather long file,8,more structure,342,215,298,22,41,42.0,58.0,393,242,325,22,41,16.0,70.0,0.0,27.0,51.0,0.0,-26.0,27.0,12.0,brechtm_rinohtype_interventions_October_04_2024.csv,brechtm/rinohtype,-26
util\crs-rules-check\rules-check.py,C0325,superfluous-parens,1,1,coreruleset/coreruleset,https://github.com/coreruleset/coreruleset/pull/3837,Yes," Code calls  del(self.undef_txvars[-1]) While it works, while it works, del is a python keyword and not a function. Hence it is better to call del self.undef_txvars[-1]  See https://www.w3schools.com/python/ref_keyword_del.asp ",4,"A very long file, uses magic numbers, if a==False, variables called a and d",6,Might have pedagogic value,1133,727,863,277,548,47.0,222.0,1133,727,863,277,548,47.0,222.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,coreruleset_coreruleset_interventions_September_27_2024.csv,coreruleset/coreruleset,
src\stacosys\service\mail.py,W0718,broad-exception-caught,1,1,kianby/stacosys,https://github.com/kianby/stacosys/pull/22,Yes," Catching Exception might hide unexpected exceptions, like those that might be raised due to future modification. Therefore, it is recommended to narrow the exceptions.  The method send of the class Mailer catches Exception in line 57. MIMEText does not raise exceptions (if not using attachments). See https://docs.python.org/3/library/email.mime.html  Most code is handled in an inner exception handling. In order to catch exception from SMTP_SSL I used SMTPException See https://docs.python.org/3/library/smtplib.html ",9,"clean, small, focused class",6,A more focused exception,59,44,46,0,0,3.0,10.0,59,44,46,0,0,3.0,10.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,kianby_stacosys_interventions_October_04_2024.csv,kianby/stacosys,
mpcontribs-api\mpcontribs\api\contributions\document.py,W0718,broad-exception-caught,1,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1857/,Yes, Catching Exception instead of specific exceptions might hide unexpected ones. Function format_cell caught Exception. isnan does not raise exceptions https://docs.python.org/3/library/math.html#math.isnan str might lead to UnicodeEncodeError https://stackoverflow.com/questions/33556465/is-there-any-object-can-make-str-function-throw-error-or-exception-in-python ,6,Low cohesion,6,"More specific exception, seems that the exception handling is not needed there in the first place",327,207,257,41,74,9.0,53.0,327,207,257,41,74,9.0,53.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,materialsproject_MPContribs_interventions_October_06_2024.csv,materialsproject/MPContribs,
mpcontribs-api\mpcontribs\api\attachments\document.py,C0301,line-too-long,1,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1857/,Yes,Made a readable line shorter,7,regular,5,Made a readable line shorter,92,61,67,6,11,5.0,15.0,93,61,68,6,11,5.0,15.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,materialsproject_MPContribs_interventions_October_06_2024.csv,materialsproject/MPContribs,
mpcontribs-api\gunicorn.conf.py,C0301,line-too-long,1,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1857/,Yes," Was a very long format line with 135 characters which wasn't readable. I reduced it to 107, higher than the recommended 100, while keeping the main part in the same line.",7,a small config file,6,now it is readable,15,12,14,0,0,,,17,12,16,0,0,,,0.0,0.0,2.0,0.0,,2.0,,materialsproject_MPContribs_interventions_October_06_2024.csv,materialsproject/MPContribs,
mpcontribs-api\mpcontribs\api\projects\document.py,R1702,too-many-nested-blocks,1,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1857/,Yes," The post_save class method had 6 nesting levels while pylint recommends not to have more than 5. I extracted the small and targeted update_columns_by_flat method, with 3 nesting levels.",5,"Almost 400 LOC, many classes, long method, magic strings",7,Code improved locally yet more work needed,388,205,312,34,65,33.0,79.0,392,208,315,34,65,30.0,78.0,0.0,3.0,4.0,0.0,-3.0,3.0,-1.0,materialsproject_MPContribs_interventions_October_06_2024.csv,materialsproject/MPContribs,-3
mpcontribs-api\mpcontribs\api\notebooks\views.py,R0915,too-many-statements,1,1,materialsproject/MPContribs,https://github.com/materialsproject/MPContribs/pull/1857/,Yes, The make function had 74 statement while pylint recommends to have at most 50.  I extracted small methods handling parts of the function. ,5,function is long and structuring is moderate,9,"Extracted methods are small and dedicated, most with a compact signature",293,196,232,27,46,28.0,52.0,321,215,251,27,46,16.0,60.0,0.0,19.0,28.0,0.0,-12.0,19.0,8.0,materialsproject_MPContribs_interventions_October_06_2024.csv,materialsproject/MPContribs,-12
bot.py,W0718,broad-exception-caught,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes," Catching Exception might hide unexpected exceptions (e.g., due to new code that will be added). The method cogSetup of the class Bot catches exception (line 81).The try section is                await self.load_extension(f""alexBot.cogs.{cog}"")                log.info(f'loaded {cog}')   The exceptions are of the discord parent class in load_extension.https://discordpy.readthedocs.io/en/latest/ext/commands/api.html#discord.ext.commands.Bot.load_extensionI narrowed the Exception to the list of specific possible exceptions.",5,"has code outside function in the beginning, a class in the middle – low cohesion",6,Possible exceptions are clearer,139,90,101,2,4,4.0,17.0,142,90,104,2,4,4.0,17.0,0.0,0.0,3.0,0.0,0.0,3.0,0.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,
alexBot\cogs\utils.py,W0718,broad-exception-caught,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes,"Catching Exception might hide unexpected exceptions (e.g., due to new code that will be added). 
The method roll of the class Utils catches exception (line 44).

The try section seems to protect discord's send_message
See here its exceptions
https://discordpy.readthedocs.io/en/stable/interactions/api.html#discord.InteractionResponse.send_message

I narrowed the Exception to the list of specific possible exceptions.",7,regular,6,Possible exceptions are clearer,139,106,112,11,22,9.0,33.0,142,106,115,11,22,9.0,33.0,0.0,0.0,3.0,0.0,0.0,3.0,0.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,
alexBot\cogs\sugery.py,W0718,broad-exception-caught,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes," Catching Exception might hide unexpected exceptions (e.g., due to new code that will be added). Method sugery_update of class Sugery  catches exception (line 157) The try section is mainly member.edit  Exception was changed to discord.ClientException, discord.Forbidde, and discord.HTTPException  For details see https://discordpy.readthedocs.io/en/latest/api.html#discord.Member.edit ",6,magic numbers,6,Possible exceptions are clearer,185,127,156,32,54,26.0,44.0,187,127,158,32,54,26.0,44.0,0.0,0.0,2.0,0.0,0.0,2.0,0.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,
alexBot\cogs\configs.py,R1719,simplifiable-if-expression,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes," The if is not needed. Using ""!="" instead of ""=="" further simplifies the expression.",5,"many returns, magic strings",7,original expression had implicit negation which was confusing,177,124,152,31,55,14.0,52.0,177,124,152,31,55,14.0,51.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,-1
alexBot\disabled\bots.py,R0912,too-many-branches,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes, Method on_member_update of class Bots had 13 branches while Pylint recommends having at most 12.  I fixed that by extracting the method _get_messagable.,6,some magic numbers,6,"Reduced one branch, code is a bit more structured.",120,67,76,21,39,13.0,29.0,124,70,79,21,39,12.0,28.0,0.0,3.0,4.0,0.0,-1.0,3.0,-1.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,-1
alexBot\cogs\reminders.py,R0912,too-many-branches,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes," The method remind of the class Reminders had 27 branches while Pyline recommends having at most 12.  I extracted methods, making the code more structured and readable and solving the alert.",1,"Very complex and structured code, 400 LOC ",10,somehow the extracted methods were small and clean ,385,257,329,58,102,26.0,90.0,421,278,350,59,103,14.0,96.0,1.0,21.0,36.0,1.0,-12.0,21.0,6.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,-13
alexBot\cogs\flight.py,R0912,too-many-branches,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes, Method mater of class Flight had 18 branches while Pylint recommends having at most 12. I extracted the methods _compute_magdec and _handle_wind to make the code more structured and solve that. ,7,regular,8,"extracted small signature methods covering large parts of method, one parameter is modified",153,94,117,19,35,16.0,32.0,160,99,122,19,35,10.0,29.0,0.0,5.0,7.0,0.0,-6.0,5.0,-3.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,-6
alexBot\cogs\mudae.py,R0912,too-many-branches,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes, Method extract_series of class Mudae had 14 branches while Pylint recommends having at most 12.  I extracted the method  _scan_pages  to make the code more structured and solve that.  ,7,regular,7,"extracted a small function, impact is also small",280,165,233,56,105,22.0,68.0,282,167,235,56,105,20.0,68.0,0.0,2.0,2.0,0.0,-2.0,2.0,0.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,-2
alexBot\cogs\errors.py,R0912,too-many-branches,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes, Method on_command_error of class CommandErrorHandler  had 19 branches while Pylint recommends having at most 12.  I aggregated error to message mapping and extracted methods to make the code more structured and solve that.,7,regular,9,Most benefit comes from aggregating similar error to message mapping,118,75,88,10,19,22.0,36.0,130,73,97,11,25,14.0,36.0,6.0,-2.0,12.0,1.0,-8.0,9.0,0.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,-8
alexBot\cogs\voiceStats.py,R0912,too-many-branches,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes, Method on_voice_state_update of class VoiceStats  had 14 branches while Pylint recommends having at most 12. Some of the ifs assign the result into a variable. I used a direct assignment of the Boolean if expression instead.,5,tendency to many returns breaks the structure,10,Direct assignment is simpler and better,270,194,232,55,94,22.0,70.0,264,185,223,55,94,19.0,67.0,0.0,-9.0,-6.0,0.0,-3.0,-9.0,-3.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,-3
alexBot\cogs\voiceTTS.py,R0912,too-many-branches,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes,Method vc_tts of class VoiceTTS  had 15 branches while Pylint recommends having at most 12. I extracted the validation into a method to make the code more structured and solve that.,5,tendency to many returns breaks the structure,9,method is simple and clean,282,197,227,47,91,18.0,79.0,291,202,232,48,92,15.0,81.0,1.0,5.0,9.0,1.0,-3.0,5.0,2.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,-6
alexBot\cogs\smartHome.py,R0915,too-many-statements,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes,Method on_voice_state_update of class PhoneMonitor  had 66 statements while Pylint recommends having at most 50.,5,tendency to many returns breaks the structure,7, message and memberList are set by different (possibly intersecting) conditions in code. That forces transferring them and coupling the functions.,364,234,302,54,100,43.0,91.0,372,239,307,54,100,31.0,91.0,0.0,5.0,8.0,0.0,-12.0,5.0,0.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,-12
alexBot\cogs\fun.py,W0107,unnecessary-pass,1,1,mralext20/alex-bot,https://github.com/mralext20/alex-bot/pull/41,Yes,Removed unnecessary pass,5,"many returns, magic numbers",6,The pass might be confusing,227,154,192,27,52,23.0,42.0,226,153,191,27,52,23.0,42.0,0.0,-1.0,-1.0,0.0,0.0,-1.0,0.0,mralext20_alex-bot_interventions_October_05_2024.csv,mralext20/alex-bot,
src\itsdangerous\timed.py,W0718,broad-exception-caught,1,1,pallets/itsdangerous,https://github.com/pallets/itsdangerous/pull/399,Yes,"Catching Exception might hide unexpected exceptions, like those that might be raised due to future modification. Therefore, it is recommended to narrow the exceptions.  The method unsign of class TimestampSigner catches exception in line 116.The try section just calls bytes_to_int(base64_decode(ts_bytes)) from encoding.py.base64_decode  in line 37    except (TypeError, ValueError) as e:             raise BadData(""Invalid base64-encoded data"") from e  raises BadData instead of TypeError and ValueError. Note that binascii.Error is not translated and might be raised.  https://docs.python.org/3/library/base64.html#base64.b64decode  I therefore replaced catching Exception in catching  (BadData, base64.binascii.Error)  https://stackoverflow.com/questions/43560936/python-how-to-catch-this-error-cant-source-error-name-binascii-error/43561287  bytes_to_int, also from encoding.py does not seem to raise exceptions.",6,few class in the same file,6,unlogged exception narrowed. A better solution was handling the base64 exception in the called method,228,110,136,15,30,14.0,35.0,229,111,137,15,30,14.0,35.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,pallets_itsdangerous_interventions_October_05_2024.csv,pallets/itsdangerous,0
src\itsdangerous\signer.py,W0718,broad-exception-caught,1,1,pallets/itsdangerous,https://github.com/pallets/itsdangerous/pull/399,Yes," Catching Exception might hide unexpected exceptions, like those that might be raised due to future modification. Therefore, it is recommended to narrow the exceptions.  The method verify_signature of class Signer catches exception in line 233.The try section just calls base64_decode from encoding.py, which in line 37   except (TypeError, ValueError) as e:        raise BadData(""Invalid base64-encoded data"") from e  raises BadData instead of TypeError and ValueError.Note that binascii.Error is not translated and might be raised.    https://docs.python.org/3/library/base64.html#base64.b64decode I therefore replaced catching Exception in catching  (BadData, base64.binascii.Error)    ",6,few class in the same file,6,unlogged exception narrowed. A better solution was handling the base64 exception in the called method,266,131,124,19,36,6.0,45.0,268,133,126,19,36,6.0,45.0,0.0,2.0,2.0,0.0,0.0,2.0,0.0,pallets_itsdangerous_interventions_October_05_2024.csv,pallets/itsdangerous,
sync-sheet.py,R0912,too-many-branches,1,1,progettowinstonsmith/e-privacy-site,https://github.com/progettowinstonsmith/e-privacy-site/pull/6,Yes," The function setup_program_session had 16 branches while Pylint recommends not to have more than 12.The function was written in a structured way so I extracted a few blocks into functions, solving the alert.This also made the function more readable.",4,"700+ LOC, unused arguments, magic constants",8,"Unrelated functions, few parameters, parameters being modified",704,532,578,178,346,15.0,158.0,714,539,585,178,346,9.0,161.0,0.0,7.0,10.0,0.0,-6.0,7.0,3.0,progettowinstonsmith_e-privacy-site_interventions_October_05_2024.csv,progettowinstonsmith/e-privacy-site,-10
sync-sheet-on-org.py,R0912,too-many-branches,1,1,progettowinstonsmith/e-privacy-site,https://github.com/progettowinstonsmith/e-privacy-site/pull/6,Yes,"Function setup_program_session had 15 branches while Pylint recommends not to have more than 12.I extracted a method for handling talk, fixing the alert.",3,"800+ LOC,if False,  unused arguments, magic constants",7,"Unrelated function, few parameters, parameters being modified. Did not extracted a function from another block that had an undefined variable.",894,709,767,211,408,15.0,223.0,897,711,769,211,408,15.0,224.0,0.0,2.0,3.0,0.0,0.0,2.0,1.0,progettowinstonsmith_e-privacy-site_interventions_October_05_2024.csv,progettowinstonsmith/e-privacy-site,-6
